// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta1/dlp.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Google.Cloud.Dlp.V2Beta1 {
  /// <summary>
  /// The DLP API is a service that allows clients
  /// to detect the presence of Personally Identifiable Information (PII) and other
  /// privacy-sensitive data in user-supplied, unstructured data streams, like text
  /// blocks or images.
  /// The service also includes methods for sensitive data redaction and
  /// scheduling of data scans on Google Cloud Platform based data sets.
  /// </summary>
  public static partial class DlpService
  {
    static readonly string __ServiceName = "google.privacy.dlp.v2beta1.DlpService";

    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest> __Marshaller_InspectContentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse> __Marshaller_InspectContentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest> __Marshaller_RedactContentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse> __Marshaller_RedactContentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest> __Marshaller_CreateInspectOperationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest> __Marshaller_ListInspectFindingsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse> __Marshaller_ListInspectFindingsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest> __Marshaller_ListInfoTypesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse> __Marshaller_ListInfoTypesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest> __Marshaller_ListRootCategoriesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse> __Marshaller_ListRootCategoriesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest, global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse> __Method_InspectContent = new grpc::Method<global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest, global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InspectContent",
        __Marshaller_InspectContentRequest,
        __Marshaller_InspectContentResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest, global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse> __Method_RedactContent = new grpc::Method<global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest, global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RedactContent",
        __Marshaller_RedactContentRequest,
        __Marshaller_RedactContentResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest, global::Google.LongRunning.Operation> __Method_CreateInspectOperation = new grpc::Method<global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInspectOperation",
        __Marshaller_CreateInspectOperationRequest,
        __Marshaller_Operation);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest, global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse> __Method_ListInspectFindings = new grpc::Method<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest, global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInspectFindings",
        __Marshaller_ListInspectFindingsRequest,
        __Marshaller_ListInspectFindingsResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest, global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse> __Method_ListInfoTypes = new grpc::Method<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest, global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInfoTypes",
        __Marshaller_ListInfoTypesRequest,
        __Marshaller_ListInfoTypesResponse);

    static readonly grpc::Method<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest, global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse> __Method_ListRootCategories = new grpc::Method<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest, global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRootCategories",
        __Marshaller_ListRootCategoriesRequest,
        __Marshaller_ListRootCategoriesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dlp.V2Beta1.DlpReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DlpService</summary>
    public abstract partial class DlpServiceBase
    {
      /// <summary>
      /// Finds potentially sensitive info in a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse> InspectContent(global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Redacts potentially sensitive info from a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse> RedactContent(global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateInspectOperation(global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns list of results for given inspect operation result set id.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse> ListInspectFindings(global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns sensitive information types for given category.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse> ListInfoTypes(global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the list of root categories of sensitive information.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse> ListRootCategories(global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DlpService</summary>
    public partial class DlpServiceClient : grpc::ClientBase<DlpServiceClient>
    {
      /// <summary>Creates a new client for DlpService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DlpServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DlpService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DlpServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DlpServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DlpServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Finds potentially sensitive info in a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse InspectContent(global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InspectContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Finds potentially sensitive info in a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse InspectContent(global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InspectContent, null, options, request);
      }
      /// <summary>
      /// Finds potentially sensitive info in a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse> InspectContentAsync(global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InspectContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Finds potentially sensitive info in a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.InspectContentResponse> InspectContentAsync(global::Google.Cloud.Dlp.V2Beta1.InspectContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InspectContent, null, options, request);
      }
      /// <summary>
      /// Redacts potentially sensitive info from a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse RedactContent(global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RedactContent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Redacts potentially sensitive info from a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse RedactContent(global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RedactContent, null, options, request);
      }
      /// <summary>
      /// Redacts potentially sensitive info from a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse> RedactContentAsync(global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RedactContentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Redacts potentially sensitive info from a list of strings.
      /// This method has limits on input size, processing time, and output size.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.RedactContentResponse> RedactContentAsync(global::Google.Cloud.Dlp.V2Beta1.RedactContentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RedactContent, null, options, request);
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation CreateInspectOperation(global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateInspectOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation CreateInspectOperation(global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInspectOperation, null, options, request);
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInspectOperationAsync(global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateInspectOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Schedules a job scanning content in a Google Cloud Platform data
      /// repository.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInspectOperationAsync(global::Google.Cloud.Dlp.V2Beta1.CreateInspectOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInspectOperation, null, options, request);
      }
      /// <summary>
      /// Returns list of results for given inspect operation result set id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse ListInspectFindings(global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInspectFindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns list of results for given inspect operation result set id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse ListInspectFindings(global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInspectFindings, null, options, request);
      }
      /// <summary>
      /// Returns list of results for given inspect operation result set id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse> ListInspectFindingsAsync(global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInspectFindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns list of results for given inspect operation result set id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsResponse> ListInspectFindingsAsync(global::Google.Cloud.Dlp.V2Beta1.ListInspectFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInspectFindings, null, options, request);
      }
      /// <summary>
      /// Returns sensitive information types for given category.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse ListInfoTypes(global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInfoTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns sensitive information types for given category.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse ListInfoTypes(global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInfoTypes, null, options, request);
      }
      /// <summary>
      /// Returns sensitive information types for given category.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse> ListInfoTypesAsync(global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListInfoTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns sensitive information types for given category.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesResponse> ListInfoTypesAsync(global::Google.Cloud.Dlp.V2Beta1.ListInfoTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInfoTypes, null, options, request);
      }
      /// <summary>
      /// Returns the list of root categories of sensitive information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse ListRootCategories(global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListRootCategories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of root categories of sensitive information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse ListRootCategories(global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRootCategories, null, options, request);
      }
      /// <summary>
      /// Returns the list of root categories of sensitive information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse> ListRootCategoriesAsync(global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListRootCategoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of root categories of sensitive information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesResponse> ListRootCategoriesAsync(global::Google.Cloud.Dlp.V2Beta1.ListRootCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRootCategories, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DlpServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DlpServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DlpServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_InspectContent, serviceImpl.InspectContent)
          .AddMethod(__Method_RedactContent, serviceImpl.RedactContent)
          .AddMethod(__Method_CreateInspectOperation, serviceImpl.CreateInspectOperation)
          .AddMethod(__Method_ListInspectFindings, serviceImpl.ListInspectFindings)
          .AddMethod(__Method_ListInfoTypes, serviceImpl.ListInfoTypes)
          .AddMethod(__Method_ListRootCategories, serviceImpl.ListRootCategories).Build();
    }

  }
}
#endregion
