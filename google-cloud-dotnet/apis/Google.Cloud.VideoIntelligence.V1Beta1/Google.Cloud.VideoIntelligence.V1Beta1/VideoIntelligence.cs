// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/videointelligence/v1beta1/video_intelligence.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.VideoIntelligence.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/videointelligence/v1beta1/video_intelligence.proto</summary>
  public static partial class VideoIntelligenceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/videointelligence/v1beta1/video_intelligence.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoIntelligenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9nb29nbGUvY2xvdWQvdmlkZW9pbnRlbGxpZ2VuY2UvdjFiZXRhMS92aWRl",
            "b19pbnRlbGxpZ2VuY2UucHJvdG8SJmdvb2dsZS5jbG91ZC52aWRlb2ludGVs",
            "bGlnZW5jZS52MWJldGExGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3Rv",
            "GiNnb29nbGUvbG9uZ3J1bm5pbmcvb3BlcmF0aW9ucy5wcm90bxofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoXZ29vZ2xlL3JwYy9zdGF0dXMu",
            "cHJvdG8i+QEKFEFubm90YXRlVmlkZW9SZXF1ZXN0EhEKCWlucHV0X3VyaRgB",
            "IAEoCRIVCg1pbnB1dF9jb250ZW50GAYgASgJEkEKCGZlYXR1cmVzGAIgAygO",
            "Mi8uZ29vZ2xlLmNsb3VkLnZpZGVvaW50ZWxsaWdlbmNlLnYxYmV0YTEuRmVh",
            "dHVyZRJLCg12aWRlb19jb250ZXh0GAMgASgLMjQuZ29vZ2xlLmNsb3VkLnZp",
            "ZGVvaW50ZWxsaWdlbmNlLnYxYmV0YTEuVmlkZW9Db250ZXh0EhIKCm91dHB1",
            "dF91cmkYBCABKAkSEwoLbG9jYXRpb25faWQYBSABKAki0gIKDFZpZGVvQ29u",
            "dGV4dBJGCghzZWdtZW50cxgBIAMoCzI0Lmdvb2dsZS5jbG91ZC52aWRlb2lu",
            "dGVsbGlnZW5jZS52MWJldGExLlZpZGVvU2VnbWVudBJYChRsYWJlbF9kZXRl",
            "Y3Rpb25fbW9kZRgCIAEoDjI6Lmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGln",
            "ZW5jZS52MWJldGExLkxhYmVsRGV0ZWN0aW9uTW9kZRIZChFzdGF0aW9uYXJ5",
            "X2NhbWVyYRgDIAEoCBIdChVsYWJlbF9kZXRlY3Rpb25fbW9kZWwYBCABKAkS",
            "HAoUZmFjZV9kZXRlY3Rpb25fbW9kZWwYBSABKAkSIwobc2hvdF9jaGFuZ2Vf",
            "ZGV0ZWN0aW9uX21vZGVsGAYgASgJEiMKG3NhZmVfc2VhcmNoX2RldGVjdGlv",
            "bl9tb2RlbBgHIAEoCSJCCgxWaWRlb1NlZ21lbnQSGQoRc3RhcnRfdGltZV9v",
            "ZmZzZXQYASABKAMSFwoPZW5kX3RpbWVfb2Zmc2V0GAIgASgDIq0BCg1MYWJl",
            "bExvY2F0aW9uEkUKB3NlZ21lbnQYASABKAsyNC5nb29nbGUuY2xvdWQudmlk",
            "ZW9pbnRlbGxpZ2VuY2UudjFiZXRhMS5WaWRlb1NlZ21lbnQSEgoKY29uZmlk",
            "ZW5jZRgCIAEoAhJBCgVsZXZlbBgDIAEoDjIyLmdvb2dsZS5jbG91ZC52aWRl",
            "b2ludGVsbGlnZW5jZS52MWJldGExLkxhYmVsTGV2ZWwihwEKD0xhYmVsQW5u",
            "b3RhdGlvbhITCgtkZXNjcmlwdGlvbhgBIAEoCRIVCg1sYW5ndWFnZV9jb2Rl",
            "GAIgASgJEkgKCWxvY2F0aW9ucxgDIAMoCzI1Lmdvb2dsZS5jbG91ZC52aWRl",
            "b2ludGVsbGlnZW5jZS52MWJldGExLkxhYmVsTG9jYXRpb24i/QIKFFNhZmVT",
            "ZWFyY2hBbm5vdGF0aW9uEkEKBWFkdWx0GAEgASgOMjIuZ29vZ2xlLmNsb3Vk",
            "LnZpZGVvaW50ZWxsaWdlbmNlLnYxYmV0YTEuTGlrZWxpaG9vZBJBCgVzcG9v",
            "ZhgCIAEoDjIyLmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52MWJl",
            "dGExLkxpa2VsaWhvb2QSQwoHbWVkaWNhbBgDIAEoDjIyLmdvb2dsZS5jbG91",
            "ZC52aWRlb2ludGVsbGlnZW5jZS52MWJldGExLkxpa2VsaWhvb2QSQwoHdmlv",
            "bGVudBgEIAEoDjIyLmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52",
            "MWJldGExLkxpa2VsaWhvb2QSQAoEcmFjeRgFIAEoDjIyLmdvb2dsZS5jbG91",
            "ZC52aWRlb2ludGVsbGlnZW5jZS52MWJldGExLkxpa2VsaWhvb2QSEwoLdGlt",
            "ZV9vZmZzZXQYBiABKAMiRwoLQm91bmRpbmdCb3gSDAoEbGVmdBgBIAEoBRIN",
            "CgVyaWdodBgCIAEoBRIOCgZib3R0b20YAyABKAUSCwoDdG9wGAQgASgFIm4K",
            "DEZhY2VMb2NhdGlvbhJJCgxib3VuZGluZ19ib3gYASABKAsyMy5nb29nbGUu",
            "Y2xvdWQudmlkZW9pbnRlbGxpZ2VuY2UudjFiZXRhMS5Cb3VuZGluZ0JveBIT",
            "Cgt0aW1lX29mZnNldBgCIAEoAyK0AQoORmFjZUFubm90YXRpb24SEQoJdGh1",
            "bWJuYWlsGAEgASgJEkYKCHNlZ21lbnRzGAIgAygLMjQuZ29vZ2xlLmNsb3Vk",
            "LnZpZGVvaW50ZWxsaWdlbmNlLnYxYmV0YTEuVmlkZW9TZWdtZW50EkcKCWxv",
            "Y2F0aW9ucxgDIAMoCzI0Lmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5j",
            "ZS52MWJldGExLkZhY2VMb2NhdGlvbiKjAwoWVmlkZW9Bbm5vdGF0aW9uUmVz",
            "dWx0cxIRCglpbnB1dF91cmkYASABKAkSUgoRbGFiZWxfYW5ub3RhdGlvbnMY",
            "AiADKAsyNy5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2UudjFiZXRh",
            "MS5MYWJlbEFubm90YXRpb24SUAoQZmFjZV9hbm5vdGF0aW9ucxgDIAMoCzI2",
            "Lmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52MWJldGExLkZhY2VB",
            "bm5vdGF0aW9uEk4KEHNob3RfYW5ub3RhdGlvbnMYBCADKAsyNC5nb29nbGUu",
            "Y2xvdWQudmlkZW9pbnRlbGxpZ2VuY2UudjFiZXRhMS5WaWRlb1NlZ21lbnQS",
            "XQoXc2FmZV9zZWFyY2hfYW5ub3RhdGlvbnMYBiADKAsyPC5nb29nbGUuY2xv",
            "dWQudmlkZW9pbnRlbGxpZ2VuY2UudjFiZXRhMS5TYWZlU2VhcmNoQW5ub3Rh",
            "dGlvbhIhCgVlcnJvchgFIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzInMKFUFu",
            "bm90YXRlVmlkZW9SZXNwb25zZRJaChJhbm5vdGF0aW9uX3Jlc3VsdHMYASAD",
            "KAsyPi5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2UudjFiZXRhMS5W",
            "aWRlb0Fubm90YXRpb25SZXN1bHRzIqcBChdWaWRlb0Fubm90YXRpb25Qcm9n",
            "cmVzcxIRCglpbnB1dF91cmkYASABKAkSGAoQcHJvZ3Jlc3NfcGVyY2VudBgC",
            "IAEoBRIuCgpzdGFydF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIvCgt1cGRhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAidQoVQW5ub3RhdGVWaWRlb1Byb2dyZXNzElwKE2Fubm90",
            "YXRpb25fcHJvZ3Jlc3MYASADKAsyPy5nb29nbGUuY2xvdWQudmlkZW9pbnRl",
            "bGxpZ2VuY2UudjFiZXRhMS5WaWRlb0Fubm90YXRpb25Qcm9ncmVzcyqBAQoH",
            "RmVhdHVyZRIXChNGRUFUVVJFX1VOU1BFQ0lGSUVEEAASEwoPTEFCRUxfREVU",
            "RUNUSU9OEAESEgoORkFDRV9ERVRFQ1RJT04QAhIZChVTSE9UX0NIQU5HRV9E",
            "RVRFQ1RJT04QAxIZChVTQUZFX1NFQVJDSF9ERVRFQ1RJT04QBCpuCgpMYWJl",
            "bExldmVsEhsKF0xBQkVMX0xFVkVMX1VOU1BFQ0lGSUVEEAASDwoLVklERU9f",
            "TEVWRUwQARIRCg1TRUdNRU5UX0xFVkVMEAISDgoKU0hPVF9MRVZFTBADEg8K",
            "C0ZSQU1FX0xFVkVMEAQqcgoSTGFiZWxEZXRlY3Rpb25Nb2RlEiQKIExBQkVM",
            "X0RFVEVDVElPTl9NT0RFX1VOU1BFQ0lGSUVEEAASDQoJU0hPVF9NT0RFEAES",
            "DgoKRlJBTUVfTU9ERRACEhcKE1NIT1RfQU5EX0ZSQU1FX01PREUQAyplCgpM",
            "aWtlbGlob29kEgsKB1VOS05PV04QABIRCg1WRVJZX1VOTElLRUxZEAESDAoI",
            "VU5MSUtFTFkQAhIMCghQT1NTSUJMRRADEgoKBkxJS0VMWRAEEg8KC1ZFUllf",
            "TElLRUxZEAUyrgEKGFZpZGVvSW50ZWxsaWdlbmNlU2VydmljZRKRAQoNQW5u",
            "b3RhdGVWaWRlbxI8Lmdvb2dsZS5jbG91ZC52aWRlb2ludGVsbGlnZW5jZS52",
            "MWJldGExLkFubm90YXRlVmlkZW9SZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5u",
            "aW5nLk9wZXJhdGlvbiIjgtPkkwIdIhgvdjFiZXRhMS92aWRlb3M6YW5ub3Rh",
            "dGU6ASpCzwEKKmNvbS5nb29nbGUuY2xvdWQudmlkZW9pbnRlbGxpZ2VuY2Uu",
            "djFiZXRhMUIdVmlkZW9JbnRlbGxpZ2VuY2VTZXJ2aWNlUHJvdG9QAVpXZ29v",
            "Z2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC92aWRl",
            "b2ludGVsbGlnZW5jZS92MWJldGExO3ZpZGVvaW50ZWxsaWdlbmNlqgImR29v",
            "Z2xlLkNsb3VkLlZpZGVvSW50ZWxsaWdlbmNlLlYxQmV0YTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.Feature), typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLevel), typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.LabelDetectionMode), typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.AnnotateVideoRequest), global::Google.Cloud.VideoIntelligence.V1Beta1.AnnotateVideoRequest.Parser, new[]{ "InputUri", "InputContent", "Features", "VideoContext", "OutputUri", "LocationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.VideoContext), global::Google.Cloud.VideoIntelligence.V1Beta1.VideoContext.Parser, new[]{ "Segments", "LabelDetectionMode", "StationaryCamera", "LabelDetectionModel", "FaceDetectionModel", "ShotChangeDetectionModel", "SafeSearchDetectionModel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment), global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment.Parser, new[]{ "StartTimeOffset", "EndTimeOffset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation), global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation.Parser, new[]{ "Segment", "Confidence", "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation), global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation.Parser, new[]{ "Description", "LanguageCode", "Locations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation), global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation.Parser, new[]{ "Adult", "Spoof", "Medical", "Violent", "Racy", "TimeOffset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.BoundingBox), global::Google.Cloud.VideoIntelligence.V1Beta1.BoundingBox.Parser, new[]{ "Left", "Right", "Bottom", "Top" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation), global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation.Parser, new[]{ "BoundingBox", "TimeOffset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation), global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation.Parser, new[]{ "Thumbnail", "Segments", "Locations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults), global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults.Parser, new[]{ "InputUri", "LabelAnnotations", "FaceAnnotations", "ShotAnnotations", "SafeSearchAnnotations", "Error" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.AnnotateVideoResponse), global::Google.Cloud.VideoIntelligence.V1Beta1.AnnotateVideoResponse.Parser, new[]{ "AnnotationResults" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress), global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress.Parser, new[]{ "InputUri", "ProgressPercent", "StartTime", "UpdateTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.VideoIntelligence.V1Beta1.AnnotateVideoProgress), global::Google.Cloud.VideoIntelligence.V1Beta1.AnnotateVideoProgress.Parser, new[]{ "AnnotationProgress" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Video annotation feature.
  /// </summary>
  public enum Feature {
    /// <summary>
    /// Unspecified.
    /// </summary>
    [pbr::OriginalName("FEATURE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Label detection. Detect objects, such as dog or flower.
    /// </summary>
    [pbr::OriginalName("LABEL_DETECTION")] LabelDetection = 1,
    /// <summary>
    /// Human face detection and tracking.
    /// </summary>
    [pbr::OriginalName("FACE_DETECTION")] FaceDetection = 2,
    /// <summary>
    /// Shot change detection.
    /// </summary>
    [pbr::OriginalName("SHOT_CHANGE_DETECTION")] ShotChangeDetection = 3,
    /// <summary>
    /// Safe search detection.
    /// </summary>
    [pbr::OriginalName("SAFE_SEARCH_DETECTION")] SafeSearchDetection = 4,
  }

  /// <summary>
  /// Label level (scope).
  /// </summary>
  public enum LabelLevel {
    /// <summary>
    /// Unspecified.
    /// </summary>
    [pbr::OriginalName("LABEL_LEVEL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Video-level. Corresponds to the whole video.
    /// </summary>
    [pbr::OriginalName("VIDEO_LEVEL")] VideoLevel = 1,
    /// <summary>
    /// Segment-level. Corresponds to one of `AnnotateSpec.segments`.
    /// </summary>
    [pbr::OriginalName("SEGMENT_LEVEL")] SegmentLevel = 2,
    /// <summary>
    /// Shot-level. Corresponds to a single shot (i.e. a series of frames
    /// without a major camera position or background change).
    /// </summary>
    [pbr::OriginalName("SHOT_LEVEL")] ShotLevel = 3,
    /// <summary>
    /// Frame-level. Corresponds to a single video frame.
    /// </summary>
    [pbr::OriginalName("FRAME_LEVEL")] FrameLevel = 4,
  }

  /// <summary>
  /// Label detection mode.
  /// </summary>
  public enum LabelDetectionMode {
    /// <summary>
    /// Unspecified.
    /// </summary>
    [pbr::OriginalName("LABEL_DETECTION_MODE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Detect shot-level labels.
    /// </summary>
    [pbr::OriginalName("SHOT_MODE")] ShotMode = 1,
    /// <summary>
    /// Detect frame-level labels.
    /// </summary>
    [pbr::OriginalName("FRAME_MODE")] FrameMode = 2,
    /// <summary>
    /// Detect both shot-level and frame-level labels.
    /// </summary>
    [pbr::OriginalName("SHOT_AND_FRAME_MODE")] ShotAndFrameMode = 3,
  }

  /// <summary>
  /// Bucketized representation of likelihood.
  /// </summary>
  public enum Likelihood {
    /// <summary>
    /// Unknown likelihood.
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Very unlikely.
    /// </summary>
    [pbr::OriginalName("VERY_UNLIKELY")] VeryUnlikely = 1,
    /// <summary>
    /// Unlikely.
    /// </summary>
    [pbr::OriginalName("UNLIKELY")] Unlikely = 2,
    /// <summary>
    /// Possible.
    /// </summary>
    [pbr::OriginalName("POSSIBLE")] Possible = 3,
    /// <summary>
    /// Likely.
    /// </summary>
    [pbr::OriginalName("LIKELY")] Likely = 4,
    /// <summary>
    /// Very likely.
    /// </summary>
    [pbr::OriginalName("VERY_LIKELY")] VeryLikely = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Video annotation request.
  /// </summary>
  public sealed partial class AnnotateVideoRequest : pb::IMessage<AnnotateVideoRequest> {
    private static readonly pb::MessageParser<AnnotateVideoRequest> _parser = new pb::MessageParser<AnnotateVideoRequest>(() => new AnnotateVideoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateVideoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoRequest(AnnotateVideoRequest other) : this() {
      inputUri_ = other.inputUri_;
      inputContent_ = other.inputContent_;
      features_ = other.features_.Clone();
      VideoContext = other.videoContext_ != null ? other.VideoContext.Clone() : null;
      outputUri_ = other.outputUri_;
      locationId_ = other.locationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoRequest Clone() {
      return new AnnotateVideoRequest(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Input video location. Currently, only
    /// [Google Cloud Storage](https://cloud.google.com/storage/) URIs are
    /// supported, which must be specified in the following format:
    /// `gs://bucket-id/object-id` (other URI formats return
    /// [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
    /// [Request URIs](/storage/docs/reference-uris).
    /// A video URI may include wildcards in `object-id`, and thus identify
    /// multiple videos. Supported wildcards: '*' to match 0 or more characters;
    /// '?' to match 1 character. If unset, the input video should be embedded
    /// in the request as `input_content`. If set, `input_content` should be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_content" field.</summary>
    public const int InputContentFieldNumber = 6;
    private string inputContent_ = "";
    /// <summary>
    /// The video data bytes. Encoding: base64. If unset, the input video(s)
    /// should be specified via `input_uri`. If set, `input_uri` should be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputContent {
      get { return inputContent_; }
      set {
        inputContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.Feature> _repeated_features_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Cloud.VideoIntelligence.V1Beta1.Feature) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.Feature> features_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.Feature>();
    /// <summary>
    /// Requested video annotation features.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.Feature> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "video_context" field.</summary>
    public const int VideoContextFieldNumber = 3;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.VideoContext videoContext_;
    /// <summary>
    /// Additional video context and/or feature-specific parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.VideoContext VideoContext {
      get { return videoContext_; }
      set {
        videoContext_ = value;
      }
    }

    /// <summary>Field number for the "output_uri" field.</summary>
    public const int OutputUriFieldNumber = 4;
    private string outputUri_ = "";
    /// <summary>
    /// Optional location where the output (in JSON format) should be stored.
    /// Currently, only [Google Cloud Storage](https://cloud.google.com/storage/)
    /// URIs are supported, which must be specified in the following format:
    /// `gs://bucket-id/object-id` (other URI formats return
    /// [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
    /// [Request URIs](/storage/docs/reference-uris).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputUri {
      get { return outputUri_; }
      set {
        outputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Optional cloud region where annotation should take place. Supported cloud
    /// regions: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region
    /// is specified, a region will be determined based on video file location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateVideoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateVideoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      if (InputContent != other.InputContent) return false;
      if(!features_.Equals(other.features_)) return false;
      if (!object.Equals(VideoContext, other.VideoContext)) return false;
      if (OutputUri != other.OutputUri) return false;
      if (LocationId != other.LocationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      if (InputContent.Length != 0) hash ^= InputContent.GetHashCode();
      hash ^= features_.GetHashCode();
      if (videoContext_ != null) hash ^= VideoContext.GetHashCode();
      if (OutputUri.Length != 0) hash ^= OutputUri.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      features_.WriteTo(output, _repeated_features_codec);
      if (videoContext_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VideoContext);
      }
      if (OutputUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OutputUri);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (InputContent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InputContent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      if (InputContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputContent);
      }
      size += features_.CalculateSize(_repeated_features_codec);
      if (videoContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoContext);
      }
      if (OutputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputUri);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateVideoRequest other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      if (other.InputContent.Length != 0) {
        InputContent = other.InputContent;
      }
      features_.Add(other.features_);
      if (other.videoContext_ != null) {
        if (videoContext_ == null) {
          videoContext_ = new global::Google.Cloud.VideoIntelligence.V1Beta1.VideoContext();
        }
        VideoContext.MergeFrom(other.VideoContext);
      }
      if (other.OutputUri.Length != 0) {
        OutputUri = other.OutputUri;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 26: {
            if (videoContext_ == null) {
              videoContext_ = new global::Google.Cloud.VideoIntelligence.V1Beta1.VideoContext();
            }
            input.ReadMessage(videoContext_);
            break;
          }
          case 34: {
            OutputUri = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
          case 50: {
            InputContent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video context and/or feature-specific parameters.
  /// </summary>
  public sealed partial class VideoContext : pb::IMessage<VideoContext> {
    private static readonly pb::MessageParser<VideoContext> _parser = new pb::MessageParser<VideoContext>(() => new VideoContext());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoContext(VideoContext other) : this() {
      segments_ = other.segments_.Clone();
      labelDetectionMode_ = other.labelDetectionMode_;
      stationaryCamera_ = other.stationaryCamera_;
      labelDetectionModel_ = other.labelDetectionModel_;
      faceDetectionModel_ = other.faceDetectionModel_;
      shotChangeDetectionModel_ = other.shotChangeDetectionModel_;
      safeSearchDetectionModel_ = other.safeSearchDetectionModel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoContext Clone() {
      return new VideoContext(this);
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> _repeated_segments_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> segments_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment>();
    /// <summary>
    /// Video segments to annotate. The segments may overlap and are not required
    /// to be contiguous or span the whole video. If unspecified, each video
    /// is treated as a single segment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> Segments {
      get { return segments_; }
    }

    /// <summary>Field number for the "label_detection_mode" field.</summary>
    public const int LabelDetectionModeFieldNumber = 2;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.LabelDetectionMode labelDetectionMode_ = 0;
    /// <summary>
    /// If label detection has been requested, what labels should be detected
    /// in addition to video-level labels or segment-level labels. If unspecified,
    /// defaults to `SHOT_MODE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.LabelDetectionMode LabelDetectionMode {
      get { return labelDetectionMode_; }
      set {
        labelDetectionMode_ = value;
      }
    }

    /// <summary>Field number for the "stationary_camera" field.</summary>
    public const int StationaryCameraFieldNumber = 3;
    private bool stationaryCamera_;
    /// <summary>
    /// Whether the video has been shot from a stationary (i.e. non-moving) camera.
    /// When set to true, might improve detection accuracy for moving objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StationaryCamera {
      get { return stationaryCamera_; }
      set {
        stationaryCamera_ = value;
      }
    }

    /// <summary>Field number for the "label_detection_model" field.</summary>
    public const int LabelDetectionModelFieldNumber = 4;
    private string labelDetectionModel_ = "";
    /// <summary>
    /// Model to use for label detection.
    /// Supported values: "latest" and "stable" (the default).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelDetectionModel {
      get { return labelDetectionModel_; }
      set {
        labelDetectionModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_detection_model" field.</summary>
    public const int FaceDetectionModelFieldNumber = 5;
    private string faceDetectionModel_ = "";
    /// <summary>
    /// Model to use for face detection.
    /// Supported values: "latest" and "stable" (the default).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceDetectionModel {
      get { return faceDetectionModel_; }
      set {
        faceDetectionModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shot_change_detection_model" field.</summary>
    public const int ShotChangeDetectionModelFieldNumber = 6;
    private string shotChangeDetectionModel_ = "";
    /// <summary>
    /// Model to use for shot change detection.
    /// Supported values: "latest" and "stable" (the default).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShotChangeDetectionModel {
      get { return shotChangeDetectionModel_; }
      set {
        shotChangeDetectionModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "safe_search_detection_model" field.</summary>
    public const int SafeSearchDetectionModelFieldNumber = 7;
    private string safeSearchDetectionModel_ = "";
    /// <summary>
    /// Model to use for safe search detection.
    /// Supported values: "latest" and "stable" (the default).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SafeSearchDetectionModel {
      get { return safeSearchDetectionModel_; }
      set {
        safeSearchDetectionModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!segments_.Equals(other.segments_)) return false;
      if (LabelDetectionMode != other.LabelDetectionMode) return false;
      if (StationaryCamera != other.StationaryCamera) return false;
      if (LabelDetectionModel != other.LabelDetectionModel) return false;
      if (FaceDetectionModel != other.FaceDetectionModel) return false;
      if (ShotChangeDetectionModel != other.ShotChangeDetectionModel) return false;
      if (SafeSearchDetectionModel != other.SafeSearchDetectionModel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= segments_.GetHashCode();
      if (LabelDetectionMode != 0) hash ^= LabelDetectionMode.GetHashCode();
      if (StationaryCamera != false) hash ^= StationaryCamera.GetHashCode();
      if (LabelDetectionModel.Length != 0) hash ^= LabelDetectionModel.GetHashCode();
      if (FaceDetectionModel.Length != 0) hash ^= FaceDetectionModel.GetHashCode();
      if (ShotChangeDetectionModel.Length != 0) hash ^= ShotChangeDetectionModel.GetHashCode();
      if (SafeSearchDetectionModel.Length != 0) hash ^= SafeSearchDetectionModel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      segments_.WriteTo(output, _repeated_segments_codec);
      if (LabelDetectionMode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LabelDetectionMode);
      }
      if (StationaryCamera != false) {
        output.WriteRawTag(24);
        output.WriteBool(StationaryCamera);
      }
      if (LabelDetectionModel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LabelDetectionModel);
      }
      if (FaceDetectionModel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FaceDetectionModel);
      }
      if (ShotChangeDetectionModel.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ShotChangeDetectionModel);
      }
      if (SafeSearchDetectionModel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SafeSearchDetectionModel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += segments_.CalculateSize(_repeated_segments_codec);
      if (LabelDetectionMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LabelDetectionMode);
      }
      if (StationaryCamera != false) {
        size += 1 + 1;
      }
      if (LabelDetectionModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabelDetectionModel);
      }
      if (FaceDetectionModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceDetectionModel);
      }
      if (ShotChangeDetectionModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShotChangeDetectionModel);
      }
      if (SafeSearchDetectionModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SafeSearchDetectionModel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoContext other) {
      if (other == null) {
        return;
      }
      segments_.Add(other.segments_);
      if (other.LabelDetectionMode != 0) {
        LabelDetectionMode = other.LabelDetectionMode;
      }
      if (other.StationaryCamera != false) {
        StationaryCamera = other.StationaryCamera;
      }
      if (other.LabelDetectionModel.Length != 0) {
        LabelDetectionModel = other.LabelDetectionModel;
      }
      if (other.FaceDetectionModel.Length != 0) {
        FaceDetectionModel = other.FaceDetectionModel;
      }
      if (other.ShotChangeDetectionModel.Length != 0) {
        ShotChangeDetectionModel = other.ShotChangeDetectionModel;
      }
      if (other.SafeSearchDetectionModel.Length != 0) {
        SafeSearchDetectionModel = other.SafeSearchDetectionModel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            segments_.AddEntriesFrom(input, _repeated_segments_codec);
            break;
          }
          case 16: {
            labelDetectionMode_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.LabelDetectionMode) input.ReadEnum();
            break;
          }
          case 24: {
            StationaryCamera = input.ReadBool();
            break;
          }
          case 34: {
            LabelDetectionModel = input.ReadString();
            break;
          }
          case 42: {
            FaceDetectionModel = input.ReadString();
            break;
          }
          case 50: {
            ShotChangeDetectionModel = input.ReadString();
            break;
          }
          case 58: {
            SafeSearchDetectionModel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video segment.
  /// </summary>
  public sealed partial class VideoSegment : pb::IMessage<VideoSegment> {
    private static readonly pb::MessageParser<VideoSegment> _parser = new pb::MessageParser<VideoSegment>(() => new VideoSegment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoSegment(VideoSegment other) : this() {
      startTimeOffset_ = other.startTimeOffset_;
      endTimeOffset_ = other.endTimeOffset_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoSegment Clone() {
      return new VideoSegment(this);
    }

    /// <summary>Field number for the "start_time_offset" field.</summary>
    public const int StartTimeOffsetFieldNumber = 1;
    private long startTimeOffset_;
    /// <summary>
    /// Start offset in microseconds (inclusive). Unset means 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTimeOffset {
      get { return startTimeOffset_; }
      set {
        startTimeOffset_ = value;
      }
    }

    /// <summary>Field number for the "end_time_offset" field.</summary>
    public const int EndTimeOffsetFieldNumber = 2;
    private long endTimeOffset_;
    /// <summary>
    /// End offset in microseconds (inclusive). Unset means 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTimeOffset {
      get { return endTimeOffset_; }
      set {
        endTimeOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTimeOffset != other.StartTimeOffset) return false;
      if (EndTimeOffset != other.EndTimeOffset) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTimeOffset != 0L) hash ^= StartTimeOffset.GetHashCode();
      if (EndTimeOffset != 0L) hash ^= EndTimeOffset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartTimeOffset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTimeOffset);
      }
      if (EndTimeOffset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTimeOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeOffset);
      }
      if (EndTimeOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeOffset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoSegment other) {
      if (other == null) {
        return;
      }
      if (other.StartTimeOffset != 0L) {
        StartTimeOffset = other.StartTimeOffset;
      }
      if (other.EndTimeOffset != 0L) {
        EndTimeOffset = other.EndTimeOffset;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StartTimeOffset = input.ReadInt64();
            break;
          }
          case 16: {
            EndTimeOffset = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Label location.
  /// </summary>
  public sealed partial class LabelLocation : pb::IMessage<LabelLocation> {
    private static readonly pb::MessageParser<LabelLocation> _parser = new pb::MessageParser<LabelLocation>(() => new LabelLocation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelLocation(LabelLocation other) : this() {
      Segment = other.segment_ != null ? other.Segment.Clone() : null;
      confidence_ = other.confidence_;
      level_ = other.level_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelLocation Clone() {
      return new LabelLocation(this);
    }

    /// <summary>Field number for the "segment" field.</summary>
    public const int SegmentFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment segment_;
    /// <summary>
    /// Video segment. Set to [-1, -1] for video-level labels.
    /// Set to [timestamp, timestamp] for frame-level labels.
    /// Otherwise, corresponds to one of `AnnotateSpec.segments`
    /// (if specified) or to shot boundaries (if requested).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment Segment {
      get { return segment_; }
      set {
        segment_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private float confidence_;
    /// <summary>
    /// Confidence that the label is accurate. Range: [0, 1].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLevel level_ = 0;
    /// <summary>
    /// Label level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Segment, other.Segment)) return false;
      if (Confidence != other.Confidence) return false;
      if (Level != other.Level) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (segment_ != null) hash ^= Segment.GetHashCode();
      if (Confidence != 0F) hash ^= Confidence.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (segment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Segment);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Confidence);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Level);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (segment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segment);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelLocation other) {
      if (other == null) {
        return;
      }
      if (other.segment_ != null) {
        if (segment_ == null) {
          segment_ = new global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment();
        }
        Segment.MergeFrom(other.Segment);
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (segment_ == null) {
              segment_ = new global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment();
            }
            input.ReadMessage(segment_);
            break;
          }
          case 21: {
            Confidence = input.ReadFloat();
            break;
          }
          case 24: {
            level_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLevel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Label annotation.
  /// </summary>
  public sealed partial class LabelAnnotation : pb::IMessage<LabelAnnotation> {
    private static readonly pb::MessageParser<LabelAnnotation> _parser = new pb::MessageParser<LabelAnnotation>(() => new LabelAnnotation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelAnnotation(LabelAnnotation other) : this() {
      description_ = other.description_;
      languageCode_ = other.languageCode_;
      locations_ = other.locations_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelAnnotation Clone() {
      return new LabelAnnotation(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    /// <summary>
    /// Textual description, e.g. `Fixed-gear bicycle`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 2;
    private string languageCode_ = "";
    /// <summary>
    /// Language code for `description` in BCP-47 format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation> locations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation>();
    /// <summary>
    /// Where the label was detected and with what confidence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelLocation> Locations {
      get { return locations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if(!locations_.Equals(other.locations_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      hash ^= locations_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LanguageCode);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      locations_.Add(other.locations_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            LanguageCode = input.ReadString();
            break;
          }
          case 26: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Safe search annotation (based on per-frame visual signals only).
  /// If no unsafe content has been detected in a frame, no annotations
  /// are present for that frame. If only some types of unsafe content
  /// have been detected in a frame, the likelihood is set to `UNKNOWN`
  /// for all other types of unsafe content.
  /// </summary>
  public sealed partial class SafeSearchAnnotation : pb::IMessage<SafeSearchAnnotation> {
    private static readonly pb::MessageParser<SafeSearchAnnotation> _parser = new pb::MessageParser<SafeSearchAnnotation>(() => new SafeSearchAnnotation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SafeSearchAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SafeSearchAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SafeSearchAnnotation(SafeSearchAnnotation other) : this() {
      adult_ = other.adult_;
      spoof_ = other.spoof_;
      medical_ = other.medical_;
      violent_ = other.violent_;
      racy_ = other.racy_;
      timeOffset_ = other.timeOffset_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SafeSearchAnnotation Clone() {
      return new SafeSearchAnnotation(this);
    }

    /// <summary>Field number for the "adult" field.</summary>
    public const int AdultFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood adult_ = 0;
    /// <summary>
    /// Likelihood of adult content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood Adult {
      get { return adult_; }
      set {
        adult_ = value;
      }
    }

    /// <summary>Field number for the "spoof" field.</summary>
    public const int SpoofFieldNumber = 2;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood spoof_ = 0;
    /// <summary>
    /// Likelihood that an obvious modification was made to the original
    /// version to make it appear funny or offensive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood Spoof {
      get { return spoof_; }
      set {
        spoof_ = value;
      }
    }

    /// <summary>Field number for the "medical" field.</summary>
    public const int MedicalFieldNumber = 3;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood medical_ = 0;
    /// <summary>
    /// Likelihood of medical content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood Medical {
      get { return medical_; }
      set {
        medical_ = value;
      }
    }

    /// <summary>Field number for the "violent" field.</summary>
    public const int ViolentFieldNumber = 4;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood violent_ = 0;
    /// <summary>
    /// Likelihood of violent content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood Violent {
      get { return violent_; }
      set {
        violent_ = value;
      }
    }

    /// <summary>Field number for the "racy" field.</summary>
    public const int RacyFieldNumber = 5;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood racy_ = 0;
    /// <summary>
    /// Likelihood of racy content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood Racy {
      get { return racy_; }
      set {
        racy_ = value;
      }
    }

    /// <summary>Field number for the "time_offset" field.</summary>
    public const int TimeOffsetFieldNumber = 6;
    private long timeOffset_;
    /// <summary>
    /// Video time offset in microseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeOffset {
      get { return timeOffset_; }
      set {
        timeOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SafeSearchAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SafeSearchAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Adult != other.Adult) return false;
      if (Spoof != other.Spoof) return false;
      if (Medical != other.Medical) return false;
      if (Violent != other.Violent) return false;
      if (Racy != other.Racy) return false;
      if (TimeOffset != other.TimeOffset) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Adult != 0) hash ^= Adult.GetHashCode();
      if (Spoof != 0) hash ^= Spoof.GetHashCode();
      if (Medical != 0) hash ^= Medical.GetHashCode();
      if (Violent != 0) hash ^= Violent.GetHashCode();
      if (Racy != 0) hash ^= Racy.GetHashCode();
      if (TimeOffset != 0L) hash ^= TimeOffset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Adult != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Adult);
      }
      if (Spoof != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Spoof);
      }
      if (Medical != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Medical);
      }
      if (Violent != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Violent);
      }
      if (Racy != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Racy);
      }
      if (TimeOffset != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Adult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Adult);
      }
      if (Spoof != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Spoof);
      }
      if (Medical != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Medical);
      }
      if (Violent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Violent);
      }
      if (Racy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Racy);
      }
      if (TimeOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeOffset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SafeSearchAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.Adult != 0) {
        Adult = other.Adult;
      }
      if (other.Spoof != 0) {
        Spoof = other.Spoof;
      }
      if (other.Medical != 0) {
        Medical = other.Medical;
      }
      if (other.Violent != 0) {
        Violent = other.Violent;
      }
      if (other.Racy != 0) {
        Racy = other.Racy;
      }
      if (other.TimeOffset != 0L) {
        TimeOffset = other.TimeOffset;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            adult_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood) input.ReadEnum();
            break;
          }
          case 16: {
            spoof_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood) input.ReadEnum();
            break;
          }
          case 24: {
            medical_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood) input.ReadEnum();
            break;
          }
          case 32: {
            violent_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood) input.ReadEnum();
            break;
          }
          case 40: {
            racy_ = (global::Google.Cloud.VideoIntelligence.V1Beta1.Likelihood) input.ReadEnum();
            break;
          }
          case 48: {
            TimeOffset = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Bounding box.
  /// </summary>
  public sealed partial class BoundingBox : pb::IMessage<BoundingBox> {
    private static readonly pb::MessageParser<BoundingBox> _parser = new pb::MessageParser<BoundingBox>(() => new BoundingBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox(BoundingBox other) : this() {
      left_ = other.left_;
      right_ = other.right_;
      bottom_ = other.bottom_;
      top_ = other.top_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox Clone() {
      return new BoundingBox(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private int left_;
    /// <summary>
    /// Left X coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 2;
    private int right_;
    /// <summary>
    /// Right X coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "bottom" field.</summary>
    public const int BottomFieldNumber = 3;
    private int bottom_;
    /// <summary>
    /// Bottom Y coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bottom {
      get { return bottom_; }
      set {
        bottom_ = value;
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 4;
    private int top_;
    /// <summary>
    /// Top Y coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (Right != other.Right) return false;
      if (Bottom != other.Bottom) return false;
      if (Top != other.Top) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Left != 0) hash ^= Left.GetHashCode();
      if (Right != 0) hash ^= Right.GetHashCode();
      if (Bottom != 0) hash ^= Bottom.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Left != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (Right != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Right);
      }
      if (Bottom != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Bottom);
      }
      if (Top != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Top);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Left != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (Right != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Right);
      }
      if (Bottom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bottom);
      }
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.Left != 0) {
        Left = other.Left;
      }
      if (other.Right != 0) {
        Right = other.Right;
      }
      if (other.Bottom != 0) {
        Bottom = other.Bottom;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            Right = input.ReadInt32();
            break;
          }
          case 24: {
            Bottom = input.ReadInt32();
            break;
          }
          case 32: {
            Top = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Face location.
  /// </summary>
  public sealed partial class FaceLocation : pb::IMessage<FaceLocation> {
    private static readonly pb::MessageParser<FaceLocation> _parser = new pb::MessageParser<FaceLocation>(() => new FaceLocation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceLocation(FaceLocation other) : this() {
      BoundingBox = other.boundingBox_ != null ? other.BoundingBox.Clone() : null;
      timeOffset_ = other.timeOffset_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceLocation Clone() {
      return new FaceLocation(this);
    }

    /// <summary>Field number for the "bounding_box" field.</summary>
    public const int BoundingBoxFieldNumber = 1;
    private global::Google.Cloud.VideoIntelligence.V1Beta1.BoundingBox boundingBox_;
    /// <summary>
    /// Bounding box in a frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.VideoIntelligence.V1Beta1.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    /// <summary>Field number for the "time_offset" field.</summary>
    public const int TimeOffsetFieldNumber = 2;
    private long timeOffset_;
    /// <summary>
    /// Video time offset in microseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeOffset {
      get { return timeOffset_; }
      set {
        timeOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      if (TimeOffset != other.TimeOffset) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (TimeOffset != 0L) hash ^= TimeOffset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (boundingBox_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BoundingBox);
      }
      if (TimeOffset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TimeOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (TimeOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeOffset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceLocation other) {
      if (other == null) {
        return;
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          boundingBox_ = new global::Google.Cloud.VideoIntelligence.V1Beta1.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      if (other.TimeOffset != 0L) {
        TimeOffset = other.TimeOffset;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (boundingBox_ == null) {
              boundingBox_ = new global::Google.Cloud.VideoIntelligence.V1Beta1.BoundingBox();
            }
            input.ReadMessage(boundingBox_);
            break;
          }
          case 16: {
            TimeOffset = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Face annotation.
  /// </summary>
  public sealed partial class FaceAnnotation : pb::IMessage<FaceAnnotation> {
    private static readonly pb::MessageParser<FaceAnnotation> _parser = new pb::MessageParser<FaceAnnotation>(() => new FaceAnnotation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceAnnotation(FaceAnnotation other) : this() {
      thumbnail_ = other.thumbnail_;
      segments_ = other.segments_.Clone();
      locations_ = other.locations_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceAnnotation Clone() {
      return new FaceAnnotation(this);
    }

    /// <summary>Field number for the "thumbnail" field.</summary>
    public const int ThumbnailFieldNumber = 1;
    private string thumbnail_ = "";
    /// <summary>
    /// Thumbnail of a representative face view (in JPEG format). Encoding: base64.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Thumbnail {
      get { return thumbnail_; }
      set {
        thumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> _repeated_segments_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> segments_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment>();
    /// <summary>
    /// All locations where a face was detected.
    /// Faces are detected and tracked on a per-video basis
    /// (as opposed to across multiple videos).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> Segments {
      get { return segments_; }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation> locations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation>();
    /// <summary>
    /// Face locations at one frame per second.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceLocation> Locations {
      get { return locations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Thumbnail != other.Thumbnail) return false;
      if(!segments_.Equals(other.segments_)) return false;
      if(!locations_.Equals(other.locations_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Thumbnail.Length != 0) hash ^= Thumbnail.GetHashCode();
      hash ^= segments_.GetHashCode();
      hash ^= locations_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Thumbnail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Thumbnail);
      }
      segments_.WriteTo(output, _repeated_segments_codec);
      locations_.WriteTo(output, _repeated_locations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Thumbnail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thumbnail);
      }
      size += segments_.CalculateSize(_repeated_segments_codec);
      size += locations_.CalculateSize(_repeated_locations_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.Thumbnail.Length != 0) {
        Thumbnail = other.Thumbnail;
      }
      segments_.Add(other.segments_);
      locations_.Add(other.locations_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Thumbnail = input.ReadString();
            break;
          }
          case 18: {
            segments_.AddEntriesFrom(input, _repeated_segments_codec);
            break;
          }
          case 26: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Annotation results for a single video.
  /// </summary>
  public sealed partial class VideoAnnotationResults : pb::IMessage<VideoAnnotationResults> {
    private static readonly pb::MessageParser<VideoAnnotationResults> _parser = new pb::MessageParser<VideoAnnotationResults>(() => new VideoAnnotationResults());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoAnnotationResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationResults(VideoAnnotationResults other) : this() {
      inputUri_ = other.inputUri_;
      labelAnnotations_ = other.labelAnnotations_.Clone();
      faceAnnotations_ = other.faceAnnotations_.Clone();
      shotAnnotations_ = other.shotAnnotations_.Clone();
      safeSearchAnnotations_ = other.safeSearchAnnotations_.Clone();
      Error = other.error_ != null ? other.Error.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationResults Clone() {
      return new VideoAnnotationResults(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Video file location in
    /// [Google Cloud Storage](https://cloud.google.com/storage/).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label_annotations" field.</summary>
    public const int LabelAnnotationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation> _repeated_labelAnnotations_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation> labelAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation>();
    /// <summary>
    /// Label annotations. There is exactly one element for each unique label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.LabelAnnotation> LabelAnnotations {
      get { return labelAnnotations_; }
    }

    /// <summary>Field number for the "face_annotations" field.</summary>
    public const int FaceAnnotationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation> _repeated_faceAnnotations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation> faceAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation>();
    /// <summary>
    /// Face annotations. There is exactly one element for each unique face.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.FaceAnnotation> FaceAnnotations {
      get { return faceAnnotations_; }
    }

    /// <summary>Field number for the "shot_annotations" field.</summary>
    public const int ShotAnnotationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> _repeated_shotAnnotations_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> shotAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment>();
    /// <summary>
    /// Shot annotations. Each shot is represented as a video segment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoSegment> ShotAnnotations {
      get { return shotAnnotations_; }
    }

    /// <summary>Field number for the "safe_search_annotations" field.</summary>
    public const int SafeSearchAnnotationsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation> _repeated_safeSearchAnnotations_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation> safeSearchAnnotations_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation>();
    /// <summary>
    /// Safe search annotations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.SafeSearchAnnotation> SafeSearchAnnotations {
      get { return safeSearchAnnotations_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 5;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// If set, indicates an error. Note that for a single `AnnotateVideoRequest`
    /// some videos may succeed and some may fail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoAnnotationResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoAnnotationResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      if(!labelAnnotations_.Equals(other.labelAnnotations_)) return false;
      if(!faceAnnotations_.Equals(other.faceAnnotations_)) return false;
      if(!shotAnnotations_.Equals(other.shotAnnotations_)) return false;
      if(!safeSearchAnnotations_.Equals(other.safeSearchAnnotations_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      hash ^= labelAnnotations_.GetHashCode();
      hash ^= faceAnnotations_.GetHashCode();
      hash ^= shotAnnotations_.GetHashCode();
      hash ^= safeSearchAnnotations_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      labelAnnotations_.WriteTo(output, _repeated_labelAnnotations_codec);
      faceAnnotations_.WriteTo(output, _repeated_faceAnnotations_codec);
      shotAnnotations_.WriteTo(output, _repeated_shotAnnotations_codec);
      if (error_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Error);
      }
      safeSearchAnnotations_.WriteTo(output, _repeated_safeSearchAnnotations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      size += labelAnnotations_.CalculateSize(_repeated_labelAnnotations_codec);
      size += faceAnnotations_.CalculateSize(_repeated_faceAnnotations_codec);
      size += shotAnnotations_.CalculateSize(_repeated_shotAnnotations_codec);
      size += safeSearchAnnotations_.CalculateSize(_repeated_safeSearchAnnotations_codec);
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoAnnotationResults other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      labelAnnotations_.Add(other.labelAnnotations_);
      faceAnnotations_.Add(other.faceAnnotations_);
      shotAnnotations_.Add(other.shotAnnotations_);
      safeSearchAnnotations_.Add(other.safeSearchAnnotations_);
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
          case 18: {
            labelAnnotations_.AddEntriesFrom(input, _repeated_labelAnnotations_codec);
            break;
          }
          case 26: {
            faceAnnotations_.AddEntriesFrom(input, _repeated_faceAnnotations_codec);
            break;
          }
          case 34: {
            shotAnnotations_.AddEntriesFrom(input, _repeated_shotAnnotations_codec);
            break;
          }
          case 42: {
            if (error_ == null) {
              error_ = new global::Google.Rpc.Status();
            }
            input.ReadMessage(error_);
            break;
          }
          case 50: {
            safeSearchAnnotations_.AddEntriesFrom(input, _repeated_safeSearchAnnotations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video annotation response. Included in the `response`
  /// field of the `Operation` returned by the `GetOperation`
  /// call of the `google::longrunning::Operations` service.
  /// </summary>
  public sealed partial class AnnotateVideoResponse : pb::IMessage<AnnotateVideoResponse> {
    private static readonly pb::MessageParser<AnnotateVideoResponse> _parser = new pb::MessageParser<AnnotateVideoResponse>(() => new AnnotateVideoResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateVideoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoResponse(AnnotateVideoResponse other) : this() {
      annotationResults_ = other.annotationResults_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoResponse Clone() {
      return new AnnotateVideoResponse(this);
    }

    /// <summary>Field number for the "annotation_results" field.</summary>
    public const int AnnotationResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults> _repeated_annotationResults_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults> annotationResults_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults>();
    /// <summary>
    /// Annotation results for all videos specified in `AnnotateVideoRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationResults> AnnotationResults {
      get { return annotationResults_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateVideoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateVideoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!annotationResults_.Equals(other.annotationResults_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= annotationResults_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      annotationResults_.WriteTo(output, _repeated_annotationResults_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += annotationResults_.CalculateSize(_repeated_annotationResults_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateVideoResponse other) {
      if (other == null) {
        return;
      }
      annotationResults_.Add(other.annotationResults_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            annotationResults_.AddEntriesFrom(input, _repeated_annotationResults_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Annotation progress for a single video.
  /// </summary>
  public sealed partial class VideoAnnotationProgress : pb::IMessage<VideoAnnotationProgress> {
    private static readonly pb::MessageParser<VideoAnnotationProgress> _parser = new pb::MessageParser<VideoAnnotationProgress>(() => new VideoAnnotationProgress());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoAnnotationProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationProgress(VideoAnnotationProgress other) : this() {
      inputUri_ = other.inputUri_;
      progressPercent_ = other.progressPercent_;
      StartTime = other.startTime_ != null ? other.StartTime.Clone() : null;
      UpdateTime = other.updateTime_ != null ? other.UpdateTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAnnotationProgress Clone() {
      return new VideoAnnotationProgress(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Video file location in
    /// [Google Cloud Storage](https://cloud.google.com/storage/).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "progress_percent" field.</summary>
    public const int ProgressPercentFieldNumber = 2;
    private int progressPercent_;
    /// <summary>
    /// Approximate percentage processed thus far.
    /// Guaranteed to be 100 when fully processed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressPercent {
      get { return progressPercent_; }
      set {
        progressPercent_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time when the request was received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Time of the most recent update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoAnnotationProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoAnnotationProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      if (ProgressPercent != other.ProgressPercent) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      if (ProgressPercent != 0) hash ^= ProgressPercent.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      if (ProgressPercent != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProgressPercent);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      if (ProgressPercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressPercent);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoAnnotationProgress other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      if (other.ProgressPercent != 0) {
        ProgressPercent = other.ProgressPercent;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
          case 16: {
            ProgressPercent = input.ReadInt32();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTime_);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(updateTime_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Video annotation progress. Included in the `metadata`
  /// field of the `Operation` returned by the `GetOperation`
  /// call of the `google::longrunning::Operations` service.
  /// </summary>
  public sealed partial class AnnotateVideoProgress : pb::IMessage<AnnotateVideoProgress> {
    private static readonly pb::MessageParser<AnnotateVideoProgress> _parser = new pb::MessageParser<AnnotateVideoProgress>(() => new AnnotateVideoProgress());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateVideoProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.VideoIntelligence.V1Beta1.VideoIntelligenceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoProgress(AnnotateVideoProgress other) : this() {
      annotationProgress_ = other.annotationProgress_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateVideoProgress Clone() {
      return new AnnotateVideoProgress(this);
    }

    /// <summary>Field number for the "annotation_progress" field.</summary>
    public const int AnnotationProgressFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress> _repeated_annotationProgress_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress> annotationProgress_ = new pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress>();
    /// <summary>
    /// Progress metadata for all videos specified in `AnnotateVideoRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.VideoIntelligence.V1Beta1.VideoAnnotationProgress> AnnotationProgress {
      get { return annotationProgress_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateVideoProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateVideoProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!annotationProgress_.Equals(other.annotationProgress_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= annotationProgress_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      annotationProgress_.WriteTo(output, _repeated_annotationProgress_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += annotationProgress_.CalculateSize(_repeated_annotationProgress_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateVideoProgress other) {
      if (other == null) {
        return;
      }
      annotationProgress_.Add(other.annotationProgress_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            annotationProgress_.AddEntriesFrom(input, _repeated_annotationProgress_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
