// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/web_detection.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Vision.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/vision/v1/web_detection.proto</summary>
  public static partial class WebDetectionReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/vision/v1/web_detection.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebDetectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipnb29nbGUvY2xvdWQvdmlzaW9uL3YxL3dlYl9kZXRlY3Rpb24ucHJvdG8S",
            "Fmdvb2dsZS5jbG91ZC52aXNpb24udjEaHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8i1gMKDFdlYkRldGVjdGlvbhJECgx3ZWJfZW50aXRpZXMYASAD",
            "KAsyLi5nb29nbGUuY2xvdWQudmlzaW9uLnYxLldlYkRldGVjdGlvbi5XZWJF",
            "bnRpdHkSSwoUZnVsbF9tYXRjaGluZ19pbWFnZXMYAiADKAsyLS5nb29nbGUu",
            "Y2xvdWQudmlzaW9uLnYxLldlYkRldGVjdGlvbi5XZWJJbWFnZRJOChdwYXJ0",
            "aWFsX21hdGNoaW5nX2ltYWdlcxgDIAMoCzItLmdvb2dsZS5jbG91ZC52aXNp",
            "b24udjEuV2ViRGV0ZWN0aW9uLldlYkltYWdlElAKGnBhZ2VzX3dpdGhfbWF0",
            "Y2hpbmdfaW1hZ2VzGAQgAygLMiwuZ29vZ2xlLmNsb3VkLnZpc2lvbi52MS5X",
            "ZWJEZXRlY3Rpb24uV2ViUGFnZRpCCglXZWJFbnRpdHkSEQoJZW50aXR5X2lk",
            "GAEgASgJEg0KBXNjb3JlGAIgASgCEhMKC2Rlc2NyaXB0aW9uGAMgASgJGiYK",
            "CFdlYkltYWdlEgsKA3VybBgBIAEoCRINCgVzY29yZRgCIAEoAholCgdXZWJQ",
            "YWdlEgsKA3VybBgBIAEoCRINCgVzY29yZRgCIAEoAkJyChpjb20uZ29vZ2xl",
            "LmNsb3VkLnZpc2lvbi52MUIRV2ViRGV0ZWN0aW9uUHJvdG9QAVo8Z29vZ2xl",
            "LmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC92aXNpb24v",
            "djE7dmlzaW9u+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Vision.V1.WebDetection), global::Google.Cloud.Vision.V1.WebDetection.Parser, new[]{ "WebEntities", "FullMatchingImages", "PartialMatchingImages", "PagesWithMatchingImages" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity), global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity.Parser, new[]{ "EntityId", "Score", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage), global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage.Parser, new[]{ "Url", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage), global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage.Parser, new[]{ "Url", "Score" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Relevant information for the image from the Internet.
  /// </summary>
  public sealed partial class WebDetection : pb::IMessage<WebDetection> {
    private static readonly pb::MessageParser<WebDetection> _parser = new pb::MessageParser<WebDetection>(() => new WebDetection());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebDetection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Vision.V1.WebDetectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebDetection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebDetection(WebDetection other) : this() {
      webEntities_ = other.webEntities_.Clone();
      fullMatchingImages_ = other.fullMatchingImages_.Clone();
      partialMatchingImages_ = other.partialMatchingImages_.Clone();
      pagesWithMatchingImages_ = other.pagesWithMatchingImages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebDetection Clone() {
      return new WebDetection(this);
    }

    /// <summary>Field number for the "web_entities" field.</summary>
    public const int WebEntitiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity> _repeated_webEntities_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity> webEntities_ = new pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity>();
    /// <summary>
    /// Deduced entities from similar images on the Internet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebEntity> WebEntities {
      get { return webEntities_; }
    }

    /// <summary>Field number for the "full_matching_images" field.</summary>
    public const int FullMatchingImagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage> _repeated_fullMatchingImages_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage> fullMatchingImages_ = new pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage>();
    /// <summary>
    /// Fully matching images from the Internet.
    /// They're definite neardups and most often a copy of the query image with
    /// merely a size change.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage> FullMatchingImages {
      get { return fullMatchingImages_; }
    }

    /// <summary>Field number for the "partial_matching_images" field.</summary>
    public const int PartialMatchingImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage> _repeated_partialMatchingImages_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage> partialMatchingImages_ = new pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage>();
    /// <summary>
    /// Partial matching images from the Internet.
    /// Those images are similar enough to share some key-point features. For
    /// example an original image will likely have partial matching for its crops.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebImage> PartialMatchingImages {
      get { return partialMatchingImages_; }
    }

    /// <summary>Field number for the "pages_with_matching_images" field.</summary>
    public const int PagesWithMatchingImagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage> _repeated_pagesWithMatchingImages_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage> pagesWithMatchingImages_ = new pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage>();
    /// <summary>
    /// Web pages containing the matching images from the Internet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Vision.V1.WebDetection.Types.WebPage> PagesWithMatchingImages {
      get { return pagesWithMatchingImages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebDetection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebDetection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!webEntities_.Equals(other.webEntities_)) return false;
      if(!fullMatchingImages_.Equals(other.fullMatchingImages_)) return false;
      if(!partialMatchingImages_.Equals(other.partialMatchingImages_)) return false;
      if(!pagesWithMatchingImages_.Equals(other.pagesWithMatchingImages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= webEntities_.GetHashCode();
      hash ^= fullMatchingImages_.GetHashCode();
      hash ^= partialMatchingImages_.GetHashCode();
      hash ^= pagesWithMatchingImages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      webEntities_.WriteTo(output, _repeated_webEntities_codec);
      fullMatchingImages_.WriteTo(output, _repeated_fullMatchingImages_codec);
      partialMatchingImages_.WriteTo(output, _repeated_partialMatchingImages_codec);
      pagesWithMatchingImages_.WriteTo(output, _repeated_pagesWithMatchingImages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += webEntities_.CalculateSize(_repeated_webEntities_codec);
      size += fullMatchingImages_.CalculateSize(_repeated_fullMatchingImages_codec);
      size += partialMatchingImages_.CalculateSize(_repeated_partialMatchingImages_codec);
      size += pagesWithMatchingImages_.CalculateSize(_repeated_pagesWithMatchingImages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebDetection other) {
      if (other == null) {
        return;
      }
      webEntities_.Add(other.webEntities_);
      fullMatchingImages_.Add(other.fullMatchingImages_);
      partialMatchingImages_.Add(other.partialMatchingImages_);
      pagesWithMatchingImages_.Add(other.pagesWithMatchingImages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            webEntities_.AddEntriesFrom(input, _repeated_webEntities_codec);
            break;
          }
          case 18: {
            fullMatchingImages_.AddEntriesFrom(input, _repeated_fullMatchingImages_codec);
            break;
          }
          case 26: {
            partialMatchingImages_.AddEntriesFrom(input, _repeated_partialMatchingImages_codec);
            break;
          }
          case 34: {
            pagesWithMatchingImages_.AddEntriesFrom(input, _repeated_pagesWithMatchingImages_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WebDetection message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Entity deduced from similar images on the Internet.
      /// </summary>
      public sealed partial class WebEntity : pb::IMessage<WebEntity> {
        private static readonly pb::MessageParser<WebEntity> _parser = new pb::MessageParser<WebEntity>(() => new WebEntity());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WebEntity> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Vision.V1.WebDetection.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebEntity() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebEntity(WebEntity other) : this() {
          entityId_ = other.entityId_;
          score_ = other.score_;
          description_ = other.description_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebEntity Clone() {
          return new WebEntity(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private string entityId_ = "";
        /// <summary>
        /// Opaque entity ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EntityId {
          get { return entityId_; }
          set {
            entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 2;
        private float score_;
        /// <summary>
        /// Overall relevancy score for the entity.
        /// Not normalized and not comparable across different image queries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        /// <summary>
        /// Canonical description of the entity, in English.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WebEntity);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WebEntity other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          if (Score != other.Score) return false;
          if (Description != other.Description) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
          if (Score != 0F) hash ^= Score.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(EntityId);
          }
          if (Score != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Score);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
          }
          if (Score != 0F) {
            size += 1 + 4;
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WebEntity other) {
          if (other == null) {
            return;
          }
          if (other.EntityId.Length != 0) {
            EntityId = other.EntityId;
          }
          if (other.Score != 0F) {
            Score = other.Score;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                EntityId = input.ReadString();
                break;
              }
              case 21: {
                Score = input.ReadFloat();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Metadata for online images.
      /// </summary>
      public sealed partial class WebImage : pb::IMessage<WebImage> {
        private static readonly pb::MessageParser<WebImage> _parser = new pb::MessageParser<WebImage>(() => new WebImage());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WebImage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Vision.V1.WebDetection.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebImage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebImage(WebImage other) : this() {
          url_ = other.url_;
          score_ = other.score_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebImage Clone() {
          return new WebImage(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 1;
        private string url_ = "";
        /// <summary>
        /// The result image URL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 2;
        private float score_;
        /// <summary>
        /// Overall relevancy score for the image.
        /// Not normalized and not comparable across different image queries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WebImage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WebImage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          if (Score != other.Score) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Score != 0F) hash ^= Score.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Url.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (Score != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Score);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Score != 0F) {
            size += 1 + 4;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WebImage other) {
          if (other == null) {
            return;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Score != 0F) {
            Score = other.Score;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 21: {
                Score = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Metadata for web pages.
      /// </summary>
      public sealed partial class WebPage : pb::IMessage<WebPage> {
        private static readonly pb::MessageParser<WebPage> _parser = new pb::MessageParser<WebPage>(() => new WebPage());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WebPage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Vision.V1.WebDetection.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebPage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebPage(WebPage other) : this() {
          url_ = other.url_;
          score_ = other.score_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WebPage Clone() {
          return new WebPage(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 1;
        private string url_ = "";
        /// <summary>
        /// The result web page URL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 2;
        private float score_;
        /// <summary>
        /// Overall relevancy score for the web page.
        /// Not normalized and not comparable across different image queries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WebPage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WebPage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          if (Score != other.Score) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Score != 0F) hash ^= Score.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Url.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (Score != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Score);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Score != 0F) {
            size += 1 + 4;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WebPage other) {
          if (other == null) {
            return;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Score != 0F) {
            Score = other.Score;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 21: {
                Score = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
