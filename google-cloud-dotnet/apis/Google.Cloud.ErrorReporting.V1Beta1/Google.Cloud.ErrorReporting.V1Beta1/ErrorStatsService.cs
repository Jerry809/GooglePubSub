// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.ErrorReporting.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto</summary>
  public static partial class ErrorStatsServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ErrorStatsServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkVnb29nbGUvZGV2dG9vbHMvY2xvdWRlcnJvcnJlcG9ydGluZy92MWJldGEx",
            "L2Vycm9yX3N0YXRzX3NlcnZpY2UucHJvdG8SK2dvb2dsZS5kZXZ0b29scy5j",
            "bG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTEaHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8aOGdvb2dsZS9kZXZ0b29scy9jbG91ZGVycm9ycmVwb3J0",
            "aW5nL3YxYmV0YTEvY29tbW9uLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVy",
            "YXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i",
            "oQQKFUxpc3RHcm91cFN0YXRzUmVxdWVzdBIUCgxwcm9qZWN0X25hbWUYASAB",
            "KAkSEAoIZ3JvdXBfaWQYAiADKAkSWQoOc2VydmljZV9maWx0ZXIYAyABKAsy",
            "QS5nb29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGEx",
            "LlNlcnZpY2VDb250ZXh0RmlsdGVyEk8KCnRpbWVfcmFuZ2UYBSABKAsyOy5n",
            "b29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLlF1",
            "ZXJ5VGltZVJhbmdlEjcKFHRpbWVkX2NvdW50X2R1cmF0aW9uGAYgASgLMhku",
            "Z29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uElMKCWFsaWdubWVudBgHIAEoDjJA",
            "Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTEu",
            "VGltZWRDb3VudEFsaWdubWVudBIyCg5hbGlnbm1lbnRfdGltZRgIIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASSwoFb3JkZXIYCSABKA4yPC5n",
            "b29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLkVy",
            "cm9yR3JvdXBPcmRlchIRCglwYWdlX3NpemUYCyABKAUSEgoKcGFnZV90b2tl",
            "bhgMIAEoCSLAAQoWTGlzdEdyb3VwU3RhdHNSZXNwb25zZRJXChFlcnJvcl9n",
            "cm91cF9zdGF0cxgBIAMoCzI8Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9y",
            "cmVwb3J0aW5nLnYxYmV0YTEuRXJyb3JHcm91cFN0YXRzEhcKD25leHRfcGFn",
            "ZV90b2tlbhgCIAEoCRI0ChB0aW1lX3JhbmdlX2JlZ2luGAQgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcCKGBAoPRXJyb3JHcm91cFN0YXRzEkYK",
            "BWdyb3VwGAEgASgLMjcuZ29vZ2xlLmRldnRvb2xzLmNsb3VkZXJyb3JyZXBv",
            "cnRpbmcudjFiZXRhMS5FcnJvckdyb3VwEg0KBWNvdW50GAIgASgDEhwKFGFm",
            "ZmVjdGVkX3VzZXJzX2NvdW50GAMgASgDEk0KDHRpbWVkX2NvdW50cxgEIAMo",
            "CzI3Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0",
            "YTEuVGltZWRDb3VudBIzCg9maXJzdF9zZWVuX3RpbWUYBSABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEjIKDmxhc3Rfc2Vlbl90aW1lGAYgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJWChFhZmZlY3RlZF9zZXJ2",
            "aWNlcxgHIAMoCzI7Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0",
            "aW5nLnYxYmV0YTEuU2VydmljZUNvbnRleHQSHQoVbnVtX2FmZmVjdGVkX3Nl",
            "cnZpY2VzGAggASgFEk8KDnJlcHJlc2VudGF0aXZlGAkgASgLMjcuZ29vZ2xl",
            "LmRldnRvb2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRhMS5FcnJvckV2",
            "ZW50InkKClRpbWVkQ291bnQSDQoFY291bnQYASABKAMSLgoKc3RhcnRfdGlt",
            "ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3Rp",
            "bWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIo4CChFMaXN0",
            "RXZlbnRzUmVxdWVzdBIUCgxwcm9qZWN0X25hbWUYASABKAkSEAoIZ3JvdXBf",
            "aWQYAiABKAkSWQoOc2VydmljZV9maWx0ZXIYAyABKAsyQS5nb29nbGUuZGV2",
            "dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLlNlcnZpY2VDb250",
            "ZXh0RmlsdGVyEk8KCnRpbWVfcmFuZ2UYBCABKAsyOy5nb29nbGUuZGV2dG9v",
            "bHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLlF1ZXJ5VGltZVJhbmdl",
            "EhEKCXBhZ2Vfc2l6ZRgGIAEoBRISCgpwYWdlX3Rva2VuGAcgASgJIrIBChJM",
            "aXN0RXZlbnRzUmVzcG9uc2USTQoMZXJyb3JfZXZlbnRzGAEgAygLMjcuZ29v",
            "Z2xlLmRldnRvb2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRhMS5FcnJv",
            "ckV2ZW50EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRI0ChB0aW1lX3Jhbmdl",
            "X2JlZ2luGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCLnAQoO",
            "UXVlcnlUaW1lUmFuZ2USUgoGcGVyaW9kGAEgASgOMkIuZ29vZ2xlLmRldnRv",
            "b2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRhMS5RdWVyeVRpbWVSYW5n",
            "ZS5QZXJpb2QigAEKBlBlcmlvZBIWChJQRVJJT0RfVU5TUEVDSUZJRUQQABIR",
            "Cg1QRVJJT0RfMV9IT1VSEAESEgoOUEVSSU9EXzZfSE9VUlMQAhIQCgxQRVJJ",
            "T0RfMV9EQVkQAxIRCg1QRVJJT0RfMV9XRUVLEAQSEgoOUEVSSU9EXzMwX0RB",
            "WVMQBSJPChRTZXJ2aWNlQ29udGV4dEZpbHRlchIPCgdzZXJ2aWNlGAIgASgJ",
            "Eg8KB3ZlcnNpb24YAyABKAkSFQoNcmVzb3VyY2VfdHlwZRgEIAEoCSIrChNE",
            "ZWxldGVFdmVudHNSZXF1ZXN0EhQKDHByb2plY3RfbmFtZRgBIAEoCSIWChRE",
            "ZWxldGVFdmVudHNSZXNwb25zZSp1ChNUaW1lZENvdW50QWxpZ25tZW50EiUK",
            "IUVSUk9SX0NPVU5UX0FMSUdOTUVOVF9VTlNQRUNJRklFRBAAEhsKF0FMSUdO",
            "TUVOVF9FUVVBTF9ST1VOREVEEAESGgoWQUxJR05NRU5UX0VRVUFMX0FUX0VO",
            "RBACKn0KD0Vycm9yR3JvdXBPcmRlchIbChdHUk9VUF9PUkRFUl9VTlNQRUNJ",
            "RklFRBAAEg4KCkNPVU5UX0RFU0MQARISCg5MQVNUX1NFRU5fREVTQxACEhAK",
            "DENSRUFURURfREVTQxADEhcKE0FGRkVDVEVEX1VTRVJTX0RFU0MQBDLyBAoR",
            "RXJyb3JTdGF0c1NlcnZpY2US0AEKDkxpc3RHcm91cFN0YXRzEkIuZ29vZ2xl",
            "LmRldnRvb2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRhMS5MaXN0R3Jv",
            "dXBTdGF0c1JlcXVlc3QaQy5nb29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJl",
            "cG9ydGluZy52MWJldGExLkxpc3RHcm91cFN0YXRzUmVzcG9uc2UiNYLT5JMC",
            "LxItL3YxYmV0YTEve3Byb2plY3RfbmFtZT1wcm9qZWN0cy8qfS9ncm91cFN0",
            "YXRzEsABCgpMaXN0RXZlbnRzEj4uZ29vZ2xlLmRldnRvb2xzLmNsb3VkZXJy",
            "b3JyZXBvcnRpbmcudjFiZXRhMS5MaXN0RXZlbnRzUmVxdWVzdBo/Lmdvb2ds",
            "ZS5kZXZ0b29scy5jbG91ZGVycm9ycmVwb3J0aW5nLnYxYmV0YTEuTGlzdEV2",
            "ZW50c1Jlc3BvbnNlIjGC0+STAisSKS92MWJldGExL3twcm9qZWN0X25hbWU9",
            "cHJvamVjdHMvKn0vZXZlbnRzEsYBCgxEZWxldGVFdmVudHMSQC5nb29nbGUu",
            "ZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9ydGluZy52MWJldGExLkRlbGV0ZUV2",
            "ZW50c1JlcXVlc3QaQS5nb29nbGUuZGV2dG9vbHMuY2xvdWRlcnJvcnJlcG9y",
            "dGluZy52MWJldGExLkRlbGV0ZUV2ZW50c1Jlc3BvbnNlIjGC0+STAisqKS92",
            "MWJldGExL3twcm9qZWN0X25hbWU9cHJvamVjdHMvKn0vZXZlbnRzQtEBCi9j",
            "b20uZ29vZ2xlLmRldnRvb2xzLmNsb3VkZXJyb3JyZXBvcnRpbmcudjFiZXRh",
            "MUIWRXJyb3JTdGF0c1NlcnZpY2VQcm90b1ABWl5nb29nbGUuZ29sYW5nLm9y",
            "Zy9nZW5wcm90by9nb29nbGVhcGlzL2RldnRvb2xzL2Nsb3VkZXJyb3JyZXBv",
            "cnRpbmcvdjFiZXRhMTtjbG91ZGVycm9ycmVwb3J0aW5nqgIjR29vZ2xlLkNs",
            "b3VkLkVycm9yUmVwb3J0aW5nLlYxQmV0YTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.ErrorReporting.V1Beta1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.ErrorReporting.V1Beta1.TimedCountAlignment), typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupOrder), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ListGroupStatsRequest), global::Google.Cloud.ErrorReporting.V1Beta1.ListGroupStatsRequest.Parser, new[]{ "ProjectName", "GroupId", "ServiceFilter", "TimeRange", "TimedCountDuration", "Alignment", "AlignmentTime", "Order", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ListGroupStatsResponse), global::Google.Cloud.ErrorReporting.V1Beta1.ListGroupStatsResponse.Parser, new[]{ "ErrorGroupStats", "NextPageToken", "TimeRangeBegin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats), global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats.Parser, new[]{ "Group", "Count", "AffectedUsersCount", "TimedCounts", "FirstSeenTime", "LastSeenTime", "AffectedServices", "NumAffectedServices", "Representative" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount), global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount.Parser, new[]{ "Count", "StartTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ListEventsRequest), global::Google.Cloud.ErrorReporting.V1Beta1.ListEventsRequest.Parser, new[]{ "ProjectName", "GroupId", "ServiceFilter", "TimeRange", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ListEventsResponse), global::Google.Cloud.ErrorReporting.V1Beta1.ListEventsResponse.Parser, new[]{ "ErrorEvents", "NextPageToken", "TimeRangeBegin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange), global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange.Parser, new[]{ "Period" }, null, new[]{ typeof(global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange.Types.Period) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter), global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter.Parser, new[]{ "Service", "Version", "ResourceType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.DeleteEventsRequest), global::Google.Cloud.ErrorReporting.V1Beta1.DeleteEventsRequest.Parser, new[]{ "ProjectName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ErrorReporting.V1Beta1.DeleteEventsResponse), global::Google.Cloud.ErrorReporting.V1Beta1.DeleteEventsResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Specifies how the time periods of error group counts are aligned.
  /// </summary>
  public enum TimedCountAlignment {
    /// <summary>
    /// No alignment specified.
    /// </summary>
    [pbr::OriginalName("ERROR_COUNT_ALIGNMENT_UNSPECIFIED")] ErrorCountAlignmentUnspecified = 0,
    /// <summary>
    /// The time periods shall be consecutive, have width equal to the
    /// requested duration, and be aligned at the `alignment_time` provided in
    /// the request.
    /// The `alignment_time` does not have to be inside the query period but
    /// even if it is outside, only time periods are returned which overlap
    /// with the query period.
    /// A rounded alignment will typically result in a
    /// different size of the first or the last time period.
    /// </summary>
    [pbr::OriginalName("ALIGNMENT_EQUAL_ROUNDED")] AlignmentEqualRounded = 1,
    /// <summary>
    /// The time periods shall be consecutive, have width equal to the
    /// requested duration, and be aligned at the end of the requested time
    /// period. This can result in a different size of the
    /// first time period.
    /// </summary>
    [pbr::OriginalName("ALIGNMENT_EQUAL_AT_END")] AlignmentEqualAtEnd = 2,
  }

  /// <summary>
  /// A sorting order of error groups.
  /// </summary>
  public enum ErrorGroupOrder {
    /// <summary>
    /// No group order specified.
    /// </summary>
    [pbr::OriginalName("GROUP_ORDER_UNSPECIFIED")] GroupOrderUnspecified = 0,
    /// <summary>
    /// Total count of errors in the given time window in descending order.
    /// </summary>
    [pbr::OriginalName("COUNT_DESC")] CountDesc = 1,
    /// <summary>
    /// Timestamp when the group was last seen in the given time window
    /// in descending order.
    /// </summary>
    [pbr::OriginalName("LAST_SEEN_DESC")] LastSeenDesc = 2,
    /// <summary>
    /// Timestamp when the group was created in descending order.
    /// </summary>
    [pbr::OriginalName("CREATED_DESC")] CreatedDesc = 3,
    /// <summary>
    /// Number of affected users in the given time window in descending order.
    /// </summary>
    [pbr::OriginalName("AFFECTED_USERS_DESC")] AffectedUsersDesc = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Specifies a set of `ErrorGroupStats` to return.
  /// </summary>
  public sealed partial class ListGroupStatsRequest : pb::IMessage<ListGroupStatsRequest> {
    private static readonly pb::MessageParser<ListGroupStatsRequest> _parser = new pb::MessageParser<ListGroupStatsRequest>(() => new ListGroupStatsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGroupStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGroupStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGroupStatsRequest(ListGroupStatsRequest other) : this() {
      projectName_ = other.projectName_;
      groupId_ = other.groupId_.Clone();
      ServiceFilter = other.serviceFilter_ != null ? other.ServiceFilter.Clone() : null;
      TimeRange = other.timeRange_ != null ? other.TimeRange.Clone() : null;
      TimedCountDuration = other.timedCountDuration_ != null ? other.TimedCountDuration.Clone() : null;
      alignment_ = other.alignment_;
      AlignmentTime = other.alignmentTime_ != null ? other.AlignmentTime.Clone() : null;
      order_ = other.order_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGroupStatsRequest Clone() {
      return new ListGroupStatsRequest(this);
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 1;
    private string projectName_ = "";
    /// <summary>
    /// [Required] The resource name of the Google Cloud Platform project. Written
    /// as &lt;code>projects/&lt;/code> plus the
    /// &lt;a href="https://support.google.com/cloud/answer/6158840">Google Cloud
    /// Platform project ID&lt;/a>.
    ///
    /// Example: &lt;code>projects/my-project-123&lt;/code>.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_groupId_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> groupId_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// [Optional] List all &lt;code>ErrorGroupStats&lt;/code> with these IDs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GroupId {
      get { return groupId_; }
    }

    /// <summary>Field number for the "service_filter" field.</summary>
    public const int ServiceFilterFieldNumber = 3;
    private global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter serviceFilter_;
    /// <summary>
    /// [Optional] List only &lt;code>ErrorGroupStats&lt;/code> which belong to a service
    /// context that matches the filter.
    /// Data for all service contexts is returned if this field is not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter ServiceFilter {
      get { return serviceFilter_; }
      set {
        serviceFilter_ = value;
      }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 5;
    private global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange timeRange_;
    /// <summary>
    /// [Optional] List data for the given time range.
    /// If not set a default time range is used. The field time_range_begin
    /// in the response will specify the beginning of this time range.
    /// Only &lt;code>ErrorGroupStats&lt;/code> with a non-zero count in the given time
    /// range are returned, unless the request contains an explicit group_id list.
    /// If a group_id list is given, also &lt;code>ErrorGroupStats&lt;/code> with zero
    /// occurrences are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "timed_count_duration" field.</summary>
    public const int TimedCountDurationFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration timedCountDuration_;
    /// <summary>
    /// [Optional] The preferred duration for a single returned `TimedCount`.
    /// If not set, no timed counts are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TimedCountDuration {
      get { return timedCountDuration_; }
      set {
        timedCountDuration_ = value;
      }
    }

    /// <summary>Field number for the "alignment" field.</summary>
    public const int AlignmentFieldNumber = 7;
    private global::Google.Cloud.ErrorReporting.V1Beta1.TimedCountAlignment alignment_ = 0;
    /// <summary>
    /// [Optional] The alignment of the timed counts to be returned.
    /// Default is `ALIGNMENT_EQUAL_AT_END`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.TimedCountAlignment Alignment {
      get { return alignment_; }
      set {
        alignment_ = value;
      }
    }

    /// <summary>Field number for the "alignment_time" field.</summary>
    public const int AlignmentTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp alignmentTime_;
    /// <summary>
    /// [Optional] Time where the timed counts shall be aligned if rounded
    /// alignment is chosen. Default is 00:00 UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AlignmentTime {
      get { return alignmentTime_; }
      set {
        alignmentTime_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 9;
    private global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupOrder order_ = 0;
    /// <summary>
    /// [Optional] The sort order in which the results are returned.
    /// Default is `COUNT_DESC`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupOrder Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 11;
    private int pageSize_;
    /// <summary>
    /// [Optional] The maximum number of results to return per response.
    /// Default is 20.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 12;
    private string pageToken_ = "";
    /// <summary>
    /// [Optional] A `next_page_token` provided by a previous response. To view
    /// additional results, pass this token along with the identical query
    /// parameters as the first request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGroupStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGroupStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectName != other.ProjectName) return false;
      if(!groupId_.Equals(other.groupId_)) return false;
      if (!object.Equals(ServiceFilter, other.ServiceFilter)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (!object.Equals(TimedCountDuration, other.TimedCountDuration)) return false;
      if (Alignment != other.Alignment) return false;
      if (!object.Equals(AlignmentTime, other.AlignmentTime)) return false;
      if (Order != other.Order) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      hash ^= groupId_.GetHashCode();
      if (serviceFilter_ != null) hash ^= ServiceFilter.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (timedCountDuration_ != null) hash ^= TimedCountDuration.GetHashCode();
      if (Alignment != 0) hash ^= Alignment.GetHashCode();
      if (alignmentTime_ != null) hash ^= AlignmentTime.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectName);
      }
      groupId_.WriteTo(output, _repeated_groupId_codec);
      if (serviceFilter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ServiceFilter);
      }
      if (timeRange_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TimeRange);
      }
      if (timedCountDuration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimedCountDuration);
      }
      if (Alignment != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Alignment);
      }
      if (alignmentTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AlignmentTime);
      }
      if (Order != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Order);
      }
      if (PageSize != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      size += groupId_.CalculateSize(_repeated_groupId_codec);
      if (serviceFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceFilter);
      }
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (timedCountDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimedCountDuration);
      }
      if (Alignment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Alignment);
      }
      if (alignmentTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlignmentTime);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Order);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGroupStatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
      groupId_.Add(other.groupId_);
      if (other.serviceFilter_ != null) {
        if (serviceFilter_ == null) {
          serviceFilter_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter();
        }
        ServiceFilter.MergeFrom(other.ServiceFilter);
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          timeRange_ = new global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.timedCountDuration_ != null) {
        if (timedCountDuration_ == null) {
          timedCountDuration_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimedCountDuration.MergeFrom(other.TimedCountDuration);
      }
      if (other.Alignment != 0) {
        Alignment = other.Alignment;
      }
      if (other.alignmentTime_ != null) {
        if (alignmentTime_ == null) {
          alignmentTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AlignmentTime.MergeFrom(other.AlignmentTime);
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectName = input.ReadString();
            break;
          }
          case 18: {
            groupId_.AddEntriesFrom(input, _repeated_groupId_codec);
            break;
          }
          case 26: {
            if (serviceFilter_ == null) {
              serviceFilter_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter();
            }
            input.ReadMessage(serviceFilter_);
            break;
          }
          case 42: {
            if (timeRange_ == null) {
              timeRange_ = new global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange();
            }
            input.ReadMessage(timeRange_);
            break;
          }
          case 50: {
            if (timedCountDuration_ == null) {
              timedCountDuration_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timedCountDuration_);
            break;
          }
          case 56: {
            alignment_ = (global::Google.Cloud.ErrorReporting.V1Beta1.TimedCountAlignment) input.ReadEnum();
            break;
          }
          case 66: {
            if (alignmentTime_ == null) {
              alignmentTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(alignmentTime_);
            break;
          }
          case 72: {
            order_ = (global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupOrder) input.ReadEnum();
            break;
          }
          case 88: {
            PageSize = input.ReadInt32();
            break;
          }
          case 98: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains a set of requested error group stats.
  /// </summary>
  public sealed partial class ListGroupStatsResponse : pb::IMessage<ListGroupStatsResponse> {
    private static readonly pb::MessageParser<ListGroupStatsResponse> _parser = new pb::MessageParser<ListGroupStatsResponse>(() => new ListGroupStatsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGroupStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGroupStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGroupStatsResponse(ListGroupStatsResponse other) : this() {
      errorGroupStats_ = other.errorGroupStats_.Clone();
      nextPageToken_ = other.nextPageToken_;
      TimeRangeBegin = other.timeRangeBegin_ != null ? other.TimeRangeBegin.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGroupStatsResponse Clone() {
      return new ListGroupStatsResponse(this);
    }

    /// <summary>Field number for the "error_group_stats" field.</summary>
    public const int ErrorGroupStatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats> _repeated_errorGroupStats_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats> errorGroupStats_ = new pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats>();
    /// <summary>
    /// The error group stats which match the given request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroupStats> ErrorGroupStats {
      get { return errorGroupStats_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If non-empty, more results are available.
    /// Pass this token, along with the same query parameters as the first
    /// request, to view the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time_range_begin" field.</summary>
    public const int TimeRangeBeginFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timeRangeBegin_;
    /// <summary>
    /// The timestamp specifies the start time to which the request was restricted.
    /// The start time is set based on the requested time range. It may be adjusted
    /// to a later time if a project has exceeded the storage quota and older data
    /// has been deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimeRangeBegin {
      get { return timeRangeBegin_; }
      set {
        timeRangeBegin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGroupStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGroupStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!errorGroupStats_.Equals(other.errorGroupStats_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if (!object.Equals(TimeRangeBegin, other.TimeRangeBegin)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= errorGroupStats_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (timeRangeBegin_ != null) hash ^= TimeRangeBegin.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      errorGroupStats_.WriteTo(output, _repeated_errorGroupStats_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (timeRangeBegin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRangeBegin);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += errorGroupStats_.CalculateSize(_repeated_errorGroupStats_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (timeRangeBegin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRangeBegin);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGroupStatsResponse other) {
      if (other == null) {
        return;
      }
      errorGroupStats_.Add(other.errorGroupStats_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      if (other.timeRangeBegin_ != null) {
        if (timeRangeBegin_ == null) {
          timeRangeBegin_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimeRangeBegin.MergeFrom(other.TimeRangeBegin);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            errorGroupStats_.AddEntriesFrom(input, _repeated_errorGroupStats_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 34: {
            if (timeRangeBegin_ == null) {
              timeRangeBegin_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timeRangeBegin_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Data extracted for a specific group based on certain filter criteria,
  /// such as a given time period and/or service filter.
  /// </summary>
  public sealed partial class ErrorGroupStats : pb::IMessage<ErrorGroupStats> {
    private static readonly pb::MessageParser<ErrorGroupStats> _parser = new pb::MessageParser<ErrorGroupStats>(() => new ErrorGroupStats());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorGroupStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorGroupStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorGroupStats(ErrorGroupStats other) : this() {
      Group = other.group_ != null ? other.Group.Clone() : null;
      count_ = other.count_;
      affectedUsersCount_ = other.affectedUsersCount_;
      timedCounts_ = other.timedCounts_.Clone();
      FirstSeenTime = other.firstSeenTime_ != null ? other.FirstSeenTime.Clone() : null;
      LastSeenTime = other.lastSeenTime_ != null ? other.LastSeenTime.Clone() : null;
      affectedServices_ = other.affectedServices_.Clone();
      numAffectedServices_ = other.numAffectedServices_;
      Representative = other.representative_ != null ? other.Representative.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorGroupStats Clone() {
      return new ErrorGroupStats(this);
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 1;
    private global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroup group_;
    /// <summary>
    /// Group data that is independent of the filter criteria.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroup Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private long count_;
    /// <summary>
    /// Approximate total number of events in the given group that match
    /// the filter criteria.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "affected_users_count" field.</summary>
    public const int AffectedUsersCountFieldNumber = 3;
    private long affectedUsersCount_;
    /// <summary>
    /// Approximate number of affected users in the given group that
    /// match the filter criteria.
    /// Users are distinguished by data in the `ErrorContext` of the
    /// individual error events, such as their login name or their remote
    /// IP address in case of HTTP requests.
    /// The number of affected users can be zero even if the number of
    /// errors is non-zero if no data was provided from which the
    /// affected user could be deduced.
    /// Users are counted based on data in the request
    /// context that was provided in the error report. If more users are
    /// implicitly affected, such as due to a crash of the whole service,
    /// this is not reflected here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AffectedUsersCount {
      get { return affectedUsersCount_; }
      set {
        affectedUsersCount_ = value;
      }
    }

    /// <summary>Field number for the "timed_counts" field.</summary>
    public const int TimedCountsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount> _repeated_timedCounts_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount> timedCounts_ = new pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount>();
    /// <summary>
    /// Approximate number of occurrences over time.
    /// Timed counts returned by ListGroups are guaranteed to be:
    ///
    /// - Inside the requested time interval
    /// - Non-overlapping, and
    /// - Ordered by ascending time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.TimedCount> TimedCounts {
      get { return timedCounts_; }
    }

    /// <summary>Field number for the "first_seen_time" field.</summary>
    public const int FirstSeenTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp firstSeenTime_;
    /// <summary>
    /// Approximate first occurrence that was ever seen for this group
    /// and which matches the given filter criteria, ignoring the
    /// time_range that was specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FirstSeenTime {
      get { return firstSeenTime_; }
      set {
        firstSeenTime_ = value;
      }
    }

    /// <summary>Field number for the "last_seen_time" field.</summary>
    public const int LastSeenTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastSeenTime_;
    /// <summary>
    /// Approximate last occurrence that was ever seen for this group and
    /// which matches the given filter criteria, ignoring the time_range
    /// that was specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastSeenTime {
      get { return lastSeenTime_; }
      set {
        lastSeenTime_ = value;
      }
    }

    /// <summary>Field number for the "affected_services" field.</summary>
    public const int AffectedServicesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContext> _repeated_affectedServices_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContext.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContext> affectedServices_ = new pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContext>();
    /// <summary>
    /// Service contexts with a non-zero error count for the given filter
    /// criteria. This list can be truncated if multiple services are affected.
    /// Refer to `num_affected_services` for the total count.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContext> AffectedServices {
      get { return affectedServices_; }
    }

    /// <summary>Field number for the "num_affected_services" field.</summary>
    public const int NumAffectedServicesFieldNumber = 8;
    private int numAffectedServices_;
    /// <summary>
    /// The total number of services with a non-zero error count for the given
    /// filter criteria.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumAffectedServices {
      get { return numAffectedServices_; }
      set {
        numAffectedServices_ = value;
      }
    }

    /// <summary>Field number for the "representative" field.</summary>
    public const int RepresentativeFieldNumber = 9;
    private global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent representative_;
    /// <summary>
    /// An arbitrary event that is chosen as representative for the whole group.
    /// The representative event is intended to be used as a quick preview for
    /// the whole group. Events in the group are usually sufficiently similar
    /// to each other such that showing an arbitrary representative provides
    /// insight into the characteristics of the group as a whole.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent Representative {
      get { return representative_; }
      set {
        representative_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorGroupStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorGroupStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Group, other.Group)) return false;
      if (Count != other.Count) return false;
      if (AffectedUsersCount != other.AffectedUsersCount) return false;
      if(!timedCounts_.Equals(other.timedCounts_)) return false;
      if (!object.Equals(FirstSeenTime, other.FirstSeenTime)) return false;
      if (!object.Equals(LastSeenTime, other.LastSeenTime)) return false;
      if(!affectedServices_.Equals(other.affectedServices_)) return false;
      if (NumAffectedServices != other.NumAffectedServices) return false;
      if (!object.Equals(Representative, other.Representative)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (group_ != null) hash ^= Group.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (AffectedUsersCount != 0L) hash ^= AffectedUsersCount.GetHashCode();
      hash ^= timedCounts_.GetHashCode();
      if (firstSeenTime_ != null) hash ^= FirstSeenTime.GetHashCode();
      if (lastSeenTime_ != null) hash ^= LastSeenTime.GetHashCode();
      hash ^= affectedServices_.GetHashCode();
      if (NumAffectedServices != 0) hash ^= NumAffectedServices.GetHashCode();
      if (representative_ != null) hash ^= Representative.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (group_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Group);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (AffectedUsersCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AffectedUsersCount);
      }
      timedCounts_.WriteTo(output, _repeated_timedCounts_codec);
      if (firstSeenTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FirstSeenTime);
      }
      if (lastSeenTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastSeenTime);
      }
      affectedServices_.WriteTo(output, _repeated_affectedServices_codec);
      if (NumAffectedServices != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(NumAffectedServices);
      }
      if (representative_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Representative);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (AffectedUsersCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AffectedUsersCount);
      }
      size += timedCounts_.CalculateSize(_repeated_timedCounts_codec);
      if (firstSeenTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstSeenTime);
      }
      if (lastSeenTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastSeenTime);
      }
      size += affectedServices_.CalculateSize(_repeated_affectedServices_codec);
      if (NumAffectedServices != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumAffectedServices);
      }
      if (representative_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Representative);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorGroupStats other) {
      if (other == null) {
        return;
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroup();
        }
        Group.MergeFrom(other.Group);
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      if (other.AffectedUsersCount != 0L) {
        AffectedUsersCount = other.AffectedUsersCount;
      }
      timedCounts_.Add(other.timedCounts_);
      if (other.firstSeenTime_ != null) {
        if (firstSeenTime_ == null) {
          firstSeenTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FirstSeenTime.MergeFrom(other.FirstSeenTime);
      }
      if (other.lastSeenTime_ != null) {
        if (lastSeenTime_ == null) {
          lastSeenTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastSeenTime.MergeFrom(other.LastSeenTime);
      }
      affectedServices_.Add(other.affectedServices_);
      if (other.NumAffectedServices != 0) {
        NumAffectedServices = other.NumAffectedServices;
      }
      if (other.representative_ != null) {
        if (representative_ == null) {
          representative_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent();
        }
        Representative.MergeFrom(other.Representative);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (group_ == null) {
              group_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ErrorGroup();
            }
            input.ReadMessage(group_);
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
          case 24: {
            AffectedUsersCount = input.ReadInt64();
            break;
          }
          case 34: {
            timedCounts_.AddEntriesFrom(input, _repeated_timedCounts_codec);
            break;
          }
          case 42: {
            if (firstSeenTime_ == null) {
              firstSeenTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(firstSeenTime_);
            break;
          }
          case 50: {
            if (lastSeenTime_ == null) {
              lastSeenTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastSeenTime_);
            break;
          }
          case 58: {
            affectedServices_.AddEntriesFrom(input, _repeated_affectedServices_codec);
            break;
          }
          case 64: {
            NumAffectedServices = input.ReadInt32();
            break;
          }
          case 74: {
            if (representative_ == null) {
              representative_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent();
            }
            input.ReadMessage(representative_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The number of errors in a given time period.
  /// All numbers are approximate since the error events are sampled
  /// before counting them.
  /// </summary>
  public sealed partial class TimedCount : pb::IMessage<TimedCount> {
    private static readonly pb::MessageParser<TimedCount> _parser = new pb::MessageParser<TimedCount>(() => new TimedCount());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimedCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimedCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimedCount(TimedCount other) : this() {
      count_ = other.count_;
      StartTime = other.startTime_ != null ? other.StartTime.Clone() : null;
      EndTime = other.endTime_ != null ? other.EndTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimedCount Clone() {
      return new TimedCount(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    /// <summary>
    /// Approximate number of occurrences in the given time period.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start of the time period to which `count` refers (included).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End of the time period to which `count` refers (excluded).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimedCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimedCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimedCount other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          endTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTime_);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              endTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(endTime_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Specifies a set of error events to return.
  /// </summary>
  public sealed partial class ListEventsRequest : pb::IMessage<ListEventsRequest> {
    private static readonly pb::MessageParser<ListEventsRequest> _parser = new pb::MessageParser<ListEventsRequest>(() => new ListEventsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListEventsRequest(ListEventsRequest other) : this() {
      projectName_ = other.projectName_;
      groupId_ = other.groupId_;
      ServiceFilter = other.serviceFilter_ != null ? other.ServiceFilter.Clone() : null;
      TimeRange = other.timeRange_ != null ? other.TimeRange.Clone() : null;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListEventsRequest Clone() {
      return new ListEventsRequest(this);
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 1;
    private string projectName_ = "";
    /// <summary>
    /// [Required] The resource name of the Google Cloud Platform project. Written
    /// as `projects/` plus the
    /// [Google Cloud Platform project
    /// ID](https://support.google.com/cloud/answer/6158840).
    /// Example: `projects/my-project-123`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    /// <summary>
    /// [Required] The group for which events shall be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_filter" field.</summary>
    public const int ServiceFilterFieldNumber = 3;
    private global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter serviceFilter_;
    /// <summary>
    /// [Optional] List only ErrorGroups which belong to a service context that
    /// matches the filter.
    /// Data for all service contexts is returned if this field is not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter ServiceFilter {
      get { return serviceFilter_; }
      set {
        serviceFilter_ = value;
      }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 4;
    private global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange timeRange_;
    /// <summary>
    /// [Optional] List only data for the given time range.
    /// If not set a default time range is used. The field time_range_begin
    /// in the response will specify the beginning of this time range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 6;
    private int pageSize_;
    /// <summary>
    /// [Optional] The maximum number of results to return per response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 7;
    private string pageToken_ = "";
    /// <summary>
    /// [Optional] A `next_page_token` provided by a previous response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectName != other.ProjectName) return false;
      if (GroupId != other.GroupId) return false;
      if (!object.Equals(ServiceFilter, other.ServiceFilter)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (serviceFilter_ != null) hash ^= ServiceFilter.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectName);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (serviceFilter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ServiceFilter);
      }
      if (timeRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRange);
      }
      if (PageSize != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (serviceFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceFilter);
      }
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.serviceFilter_ != null) {
        if (serviceFilter_ == null) {
          serviceFilter_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter();
        }
        ServiceFilter.MergeFrom(other.ServiceFilter);
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          timeRange_ = new global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectName = input.ReadString();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            if (serviceFilter_ == null) {
              serviceFilter_ = new global::Google.Cloud.ErrorReporting.V1Beta1.ServiceContextFilter();
            }
            input.ReadMessage(serviceFilter_);
            break;
          }
          case 34: {
            if (timeRange_ == null) {
              timeRange_ = new global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange();
            }
            input.ReadMessage(timeRange_);
            break;
          }
          case 48: {
            PageSize = input.ReadInt32();
            break;
          }
          case 58: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains a set of requested error events.
  /// </summary>
  public sealed partial class ListEventsResponse : pb::IMessage<ListEventsResponse> {
    private static readonly pb::MessageParser<ListEventsResponse> _parser = new pb::MessageParser<ListEventsResponse>(() => new ListEventsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListEventsResponse(ListEventsResponse other) : this() {
      errorEvents_ = other.errorEvents_.Clone();
      nextPageToken_ = other.nextPageToken_;
      TimeRangeBegin = other.timeRangeBegin_ != null ? other.TimeRangeBegin.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListEventsResponse Clone() {
      return new ListEventsResponse(this);
    }

    /// <summary>Field number for the "error_events" field.</summary>
    public const int ErrorEventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent> _repeated_errorEvents_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent> errorEvents_ = new pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent>();
    /// <summary>
    /// The error events which match the given request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ErrorReporting.V1Beta1.ErrorEvent> ErrorEvents {
      get { return errorEvents_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If non-empty, more results are available.
    /// Pass this token, along with the same query parameters as the first
    /// request, to view the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time_range_begin" field.</summary>
    public const int TimeRangeBeginFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timeRangeBegin_;
    /// <summary>
    /// The timestamp specifies the start time to which the request was restricted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimeRangeBegin {
      get { return timeRangeBegin_; }
      set {
        timeRangeBegin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!errorEvents_.Equals(other.errorEvents_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if (!object.Equals(TimeRangeBegin, other.TimeRangeBegin)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= errorEvents_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (timeRangeBegin_ != null) hash ^= TimeRangeBegin.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      errorEvents_.WriteTo(output, _repeated_errorEvents_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (timeRangeBegin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRangeBegin);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += errorEvents_.CalculateSize(_repeated_errorEvents_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (timeRangeBegin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRangeBegin);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListEventsResponse other) {
      if (other == null) {
        return;
      }
      errorEvents_.Add(other.errorEvents_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      if (other.timeRangeBegin_ != null) {
        if (timeRangeBegin_ == null) {
          timeRangeBegin_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimeRangeBegin.MergeFrom(other.TimeRangeBegin);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            errorEvents_.AddEntriesFrom(input, _repeated_errorEvents_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 34: {
            if (timeRangeBegin_ == null) {
              timeRangeBegin_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timeRangeBegin_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Requests might be rejected or the resulting timed count durations might be
  /// adjusted for lower durations.
  /// </summary>
  public sealed partial class QueryTimeRange : pb::IMessage<QueryTimeRange> {
    private static readonly pb::MessageParser<QueryTimeRange> _parser = new pb::MessageParser<QueryTimeRange>(() => new QueryTimeRange());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryTimeRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryTimeRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryTimeRange(QueryTimeRange other) : this() {
      period_ = other.period_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryTimeRange Clone() {
      return new QueryTimeRange(this);
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 1;
    private global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange.Types.Period period_ = 0;
    /// <summary>
    /// Restricts the query to the specified time range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange.Types.Period Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryTimeRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryTimeRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Period != other.Period) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Period != 0) hash ^= Period.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Period != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Period);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryTimeRange other) {
      if (other == null) {
        return;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            period_ = (global::Google.Cloud.ErrorReporting.V1Beta1.QueryTimeRange.Types.Period) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryTimeRange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The supported time ranges.
      /// </summary>
      public enum Period {
        /// <summary>
        /// Do not use.
        /// </summary>
        [pbr::OriginalName("PERIOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Retrieve data for the last hour.
        /// Recommended minimum timed count duration: 1 min.
        /// </summary>
        [pbr::OriginalName("PERIOD_1_HOUR")] _1Hour = 1,
        /// <summary>
        /// Retrieve data for the last 6 hours.
        /// Recommended minimum timed count duration: 10 min.
        /// </summary>
        [pbr::OriginalName("PERIOD_6_HOURS")] _6Hours = 2,
        /// <summary>
        /// Retrieve data for the last day.
        /// Recommended minimum timed count duration: 1 hour.
        /// </summary>
        [pbr::OriginalName("PERIOD_1_DAY")] _1Day = 3,
        /// <summary>
        /// Retrieve data for the last week.
        /// Recommended minimum timed count duration: 6 hours.
        /// </summary>
        [pbr::OriginalName("PERIOD_1_WEEK")] _1Week = 4,
        /// <summary>
        /// Retrieve data for the last 30 days.
        /// Recommended minimum timed count duration: 1 day.
        /// </summary>
        [pbr::OriginalName("PERIOD_30_DAYS")] _30Days = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Specifies criteria for filtering a subset of service contexts.
  /// The fields in the filter correspond to the fields in `ServiceContext`.
  /// Only exact, case-sensitive matches are supported.
  /// If a field is unset or empty, it matches arbitrary values.
  /// </summary>
  public sealed partial class ServiceContextFilter : pb::IMessage<ServiceContextFilter> {
    private static readonly pb::MessageParser<ServiceContextFilter> _parser = new pb::MessageParser<ServiceContextFilter>(() => new ServiceContextFilter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceContextFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceContextFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceContextFilter(ServiceContextFilter other) : this() {
      service_ = other.service_;
      version_ = other.version_;
      resourceType_ = other.resourceType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceContextFilter Clone() {
      return new ServiceContextFilter(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 2;
    private string service_ = "";
    /// <summary>
    /// [Optional] The exact value to match against
    /// [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    /// [Optional] The exact value to match against
    /// [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_type" field.</summary>
    public const int ResourceTypeFieldNumber = 4;
    private string resourceType_ = "";
    /// <summary>
    /// [Optional] The exact value to match against
    /// [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceType {
      get { return resourceType_; }
      set {
        resourceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceContextFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceContextFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (Version != other.Version) return false;
      if (ResourceType != other.ResourceType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (ResourceType.Length != 0) hash ^= ResourceType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Service.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Service);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (ResourceType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourceType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (ResourceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceContextFilter other) {
      if (other == null) {
        return;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.ResourceType.Length != 0) {
        ResourceType = other.ResourceType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Service = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            ResourceType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Deletes all events in the project.
  /// </summary>
  public sealed partial class DeleteEventsRequest : pb::IMessage<DeleteEventsRequest> {
    private static readonly pb::MessageParser<DeleteEventsRequest> _parser = new pb::MessageParser<DeleteEventsRequest>(() => new DeleteEventsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteEventsRequest(DeleteEventsRequest other) : this() {
      projectName_ = other.projectName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteEventsRequest Clone() {
      return new DeleteEventsRequest(this);
    }

    /// <summary>Field number for the "project_name" field.</summary>
    public const int ProjectNameFieldNumber = 1;
    private string projectName_ = "";
    /// <summary>
    /// [Required] The resource name of the Google Cloud Platform project. Written
    /// as `projects/` plus the
    /// [Google Cloud Platform project
    /// ID](https://support.google.com/cloud/answer/6158840).
    /// Example: `projects/my-project-123`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectName != other.ProjectName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectName.Length != 0) {
        ProjectName = other.ProjectName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for deleting error events.
  /// </summary>
  public sealed partial class DeleteEventsResponse : pb::IMessage<DeleteEventsResponse> {
    private static readonly pb::MessageParser<DeleteEventsResponse> _parser = new pb::MessageParser<DeleteEventsResponse>(() => new DeleteEventsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ErrorReporting.V1Beta1.ErrorStatsServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteEventsResponse(DeleteEventsResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteEventsResponse Clone() {
      return new DeleteEventsResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteEventsResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
