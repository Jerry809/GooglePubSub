// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/query.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Datastore.V1 {

  /// <summary>Holder for reflection information generated from google/datastore/v1/query.proto</summary>
  public static partial class QueryReflection {

    #region Descriptor
    /// <summary>File descriptor for google/datastore/v1/query.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9nb29nbGUvZGF0YXN0b3JlL3YxL3F1ZXJ5LnByb3RvEhNnb29nbGUuZGF0",
            "YXN0b3JlLnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGiBnb29n",
            "bGUvZGF0YXN0b3JlL3YxL2VudGl0eS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVm",
            "L3dyYXBwZXJzLnByb3RvGhhnb29nbGUvdHlwZS9sYXRsbmcucHJvdG8irwEK",
            "DEVudGl0eVJlc3VsdBIrCgZlbnRpdHkYASABKAsyGy5nb29nbGUuZGF0YXN0",
            "b3JlLnYxLkVudGl0eRIPCgd2ZXJzaW9uGAQgASgDEg4KBmN1cnNvchgDIAEo",
            "DCJRCgpSZXN1bHRUeXBlEhsKF1JFU1VMVF9UWVBFX1VOU1BFQ0lGSUVEEAAS",
            "CAoERlVMTBABEg4KClBST0pFQ1RJT04QAhIMCghLRVlfT05MWRADIvICCgVR",
            "dWVyeRIzCgpwcm9qZWN0aW9uGAIgAygLMh8uZ29vZ2xlLmRhdGFzdG9yZS52",
            "MS5Qcm9qZWN0aW9uEjEKBGtpbmQYAyADKAsyIy5nb29nbGUuZGF0YXN0b3Jl",
            "LnYxLktpbmRFeHByZXNzaW9uEisKBmZpbHRlchgEIAEoCzIbLmdvb2dsZS5k",
            "YXRhc3RvcmUudjEuRmlsdGVyEjEKBW9yZGVyGAUgAygLMiIuZ29vZ2xlLmRh",
            "dGFzdG9yZS52MS5Qcm9wZXJ0eU9yZGVyEjsKC2Rpc3RpbmN0X29uGAYgAygL",
            "MiYuZ29vZ2xlLmRhdGFzdG9yZS52MS5Qcm9wZXJ0eVJlZmVyZW5jZRIUCgxz",
            "dGFydF9jdXJzb3IYByABKAwSEgoKZW5kX2N1cnNvchgIIAEoDBIOCgZvZmZz",
            "ZXQYCiABKAUSKgoFbGltaXQYDCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZSIeCg5LaW5kRXhwcmVzc2lvbhIMCgRuYW1lGAEgASgJIiEKEVBy",
            "b3BlcnR5UmVmZXJlbmNlEgwKBG5hbWUYAiABKAkiRgoKUHJvamVjdGlvbhI4",
            "Cghwcm9wZXJ0eRgBIAEoCzImLmdvb2dsZS5kYXRhc3RvcmUudjEuUHJvcGVy",
            "dHlSZWZlcmVuY2Ui0QEKDVByb3BlcnR5T3JkZXISOAoIcHJvcGVydHkYASAB",
            "KAsyJi5nb29nbGUuZGF0YXN0b3JlLnYxLlByb3BlcnR5UmVmZXJlbmNlEj8K",
            "CWRpcmVjdGlvbhgCIAEoDjIsLmdvb2dsZS5kYXRhc3RvcmUudjEuUHJvcGVy",
            "dHlPcmRlci5EaXJlY3Rpb24iRQoJRGlyZWN0aW9uEhkKFURJUkVDVElPTl9V",
            "TlNQRUNJRklFRBAAEg0KCUFTQ0VORElORxABEg4KCkRFU0NFTkRJTkcQAiKZ",
            "AQoGRmlsdGVyEkAKEGNvbXBvc2l0ZV9maWx0ZXIYASABKAsyJC5nb29nbGUu",
            "ZGF0YXN0b3JlLnYxLkNvbXBvc2l0ZUZpbHRlckgAEj4KD3Byb3BlcnR5X2Zp",
            "bHRlchgCIAEoCzIjLmdvb2dsZS5kYXRhc3RvcmUudjEuUHJvcGVydHlGaWx0",
            "ZXJIAEINCgtmaWx0ZXJfdHlwZSKpAQoPQ29tcG9zaXRlRmlsdGVyEjkKAm9w",
            "GAEgASgOMi0uZ29vZ2xlLmRhdGFzdG9yZS52MS5Db21wb3NpdGVGaWx0ZXIu",
            "T3BlcmF0b3ISLAoHZmlsdGVycxgCIAMoCzIbLmdvb2dsZS5kYXRhc3RvcmUu",
            "djEuRmlsdGVyIi0KCE9wZXJhdG9yEhgKFE9QRVJBVE9SX1VOU1BFQ0lGSUVE",
            "EAASBwoDQU5EEAEixwIKDlByb3BlcnR5RmlsdGVyEjgKCHByb3BlcnR5GAEg",
            "ASgLMiYuZ29vZ2xlLmRhdGFzdG9yZS52MS5Qcm9wZXJ0eVJlZmVyZW5jZRI4",
            "CgJvcBgCIAEoDjIsLmdvb2dsZS5kYXRhc3RvcmUudjEuUHJvcGVydHlGaWx0",
            "ZXIuT3BlcmF0b3ISKQoFdmFsdWUYAyABKAsyGi5nb29nbGUuZGF0YXN0b3Jl",
            "LnYxLlZhbHVlIpUBCghPcGVyYXRvchIYChRPUEVSQVRPUl9VTlNQRUNJRklF",
            "RBAAEg0KCUxFU1NfVEhBThABEhYKEkxFU1NfVEhBTl9PUl9FUVVBTBACEhAK",
            "DEdSRUFURVJfVEhBThADEhkKFUdSRUFURVJfVEhBTl9PUl9FUVVBTBAEEgkK",
            "BUVRVUFMEAUSEAoMSEFTX0FOQ0VTVE9SEAsipQIKCEdxbFF1ZXJ5EhQKDHF1",
            "ZXJ5X3N0cmluZxgBIAEoCRIWCg5hbGxvd19saXRlcmFscxgCIAEoCBJICg5u",
            "YW1lZF9iaW5kaW5ncxgFIAMoCzIwLmdvb2dsZS5kYXRhc3RvcmUudjEuR3Fs",
            "UXVlcnkuTmFtZWRCaW5kaW5nc0VudHJ5EkMKE3Bvc2l0aW9uYWxfYmluZGlu",
            "Z3MYBCADKAsyJi5nb29nbGUuZGF0YXN0b3JlLnYxLkdxbFF1ZXJ5UGFyYW1l",
            "dGVyGlwKEk5hbWVkQmluZGluZ3NFbnRyeRILCgNrZXkYASABKAkSNQoFdmFs",
            "dWUYAiABKAsyJi5nb29nbGUuZGF0YXN0b3JlLnYxLkdxbFF1ZXJ5UGFyYW1l",
            "dGVyOgI4ASJkChFHcWxRdWVyeVBhcmFtZXRlchIrCgV2YWx1ZRgCIAEoCzIa",
            "Lmdvb2dsZS5kYXRhc3RvcmUudjEuVmFsdWVIABIQCgZjdXJzb3IYAyABKAxI",
            "AEIQCg5wYXJhbWV0ZXJfdHlwZSLeAwoQUXVlcnlSZXN1bHRCYXRjaBIXCg9z",
            "a2lwcGVkX3Jlc3VsdHMYBiABKAUSFgoOc2tpcHBlZF9jdXJzb3IYAyABKAwS",
            "SAoSZW50aXR5X3Jlc3VsdF90eXBlGAEgASgOMiwuZ29vZ2xlLmRhdGFzdG9y",
            "ZS52MS5FbnRpdHlSZXN1bHQuUmVzdWx0VHlwZRI5Cg5lbnRpdHlfcmVzdWx0",
            "cxgCIAMoCzIhLmdvb2dsZS5kYXRhc3RvcmUudjEuRW50aXR5UmVzdWx0EhIK",
            "CmVuZF9jdXJzb3IYBCABKAwSSwoMbW9yZV9yZXN1bHRzGAUgASgOMjUuZ29v",
            "Z2xlLmRhdGFzdG9yZS52MS5RdWVyeVJlc3VsdEJhdGNoLk1vcmVSZXN1bHRz",
            "VHlwZRIYChBzbmFwc2hvdF92ZXJzaW9uGAcgASgDIpgBCg9Nb3JlUmVzdWx0",
            "c1R5cGUSIQodTU9SRV9SRVNVTFRTX1RZUEVfVU5TUEVDSUZJRUQQABIQCgxO",
            "T1RfRklOSVNIRUQQARIcChhNT1JFX1JFU1VMVFNfQUZURVJfTElNSVQQAhId",
            "ChlNT1JFX1JFU1VMVFNfQUZURVJfQ1VSU09SEAQSEwoPTk9fTU9SRV9SRVNV",
            "TFRTEANCgQEKF2NvbS5nb29nbGUuZGF0YXN0b3JlLnYxQgpRdWVyeVByb3Rv",
            "UAFaPGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvZGF0",
            "YXN0b3JlL3YxO2RhdGFzdG9yZaoCGUdvb2dsZS5DbG91ZC5EYXRhc3RvcmUu",
            "VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Datastore.V1.EntityReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.EntityResult), global::Google.Cloud.Datastore.V1.EntityResult.Parser, new[]{ "Entity", "Version", "Cursor" }, null, new[]{ typeof(global::Google.Cloud.Datastore.V1.EntityResult.Types.ResultType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.Query), global::Google.Cloud.Datastore.V1.Query.Parser, new[]{ "Projection", "Kind", "Filter", "Order", "DistinctOn", "StartCursor", "EndCursor", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.KindExpression), global::Google.Cloud.Datastore.V1.KindExpression.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.PropertyReference), global::Google.Cloud.Datastore.V1.PropertyReference.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.Projection), global::Google.Cloud.Datastore.V1.Projection.Parser, new[]{ "Property" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.PropertyOrder), global::Google.Cloud.Datastore.V1.PropertyOrder.Parser, new[]{ "Property", "Direction" }, null, new[]{ typeof(global::Google.Cloud.Datastore.V1.PropertyOrder.Types.Direction) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.Filter), global::Google.Cloud.Datastore.V1.Filter.Parser, new[]{ "CompositeFilter", "PropertyFilter" }, new[]{ "FilterType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.CompositeFilter), global::Google.Cloud.Datastore.V1.CompositeFilter.Parser, new[]{ "Op", "Filters" }, null, new[]{ typeof(global::Google.Cloud.Datastore.V1.CompositeFilter.Types.Operator) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.PropertyFilter), global::Google.Cloud.Datastore.V1.PropertyFilter.Parser, new[]{ "Property", "Op", "Value" }, null, new[]{ typeof(global::Google.Cloud.Datastore.V1.PropertyFilter.Types.Operator) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.GqlQuery), global::Google.Cloud.Datastore.V1.GqlQuery.Parser, new[]{ "QueryString", "AllowLiterals", "NamedBindings", "PositionalBindings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.GqlQueryParameter), global::Google.Cloud.Datastore.V1.GqlQueryParameter.Parser, new[]{ "Value", "Cursor" }, new[]{ "ParameterType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Datastore.V1.QueryResultBatch), global::Google.Cloud.Datastore.V1.QueryResultBatch.Parser, new[]{ "SkippedResults", "SkippedCursor", "EntityResultType", "EntityResults", "EndCursor", "MoreResults", "SnapshotVersion" }, null, new[]{ typeof(global::Google.Cloud.Datastore.V1.QueryResultBatch.Types.MoreResultsType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The result of fetching an entity from Datastore.
  /// </summary>
  public sealed partial class EntityResult : pb::IMessage<EntityResult> {
    private static readonly pb::MessageParser<EntityResult> _parser = new pb::MessageParser<EntityResult>(() => new EntityResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityResult(EntityResult other) : this() {
      Entity = other.entity_ != null ? other.Entity.Clone() : null;
      version_ = other.version_;
      cursor_ = other.cursor_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityResult Clone() {
      return new EntityResult(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Google.Cloud.Datastore.V1.Entity entity_;
    /// <summary>
    /// The resulting entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private long version_;
    /// <summary>
    /// The version of the entity, a strictly positive number that monotonically
    /// increases with changes to the entity.
    ///
    /// This field is set for [`FULL`][google.datastore.v1.EntityResult.ResultType.FULL] entity
    /// results.
    ///
    /// For [missing][google.datastore.v1.LookupResponse.missing] entities in `LookupResponse`, this
    /// is the version of the snapshot that was used to look up the entity, and it
    /// is always set except for eventually consistent reads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 3;
    private pb::ByteString cursor_ = pb::ByteString.Empty;
    /// <summary>
    /// A cursor that points to the position after the result entity.
    /// Set only when the `EntityResult` is part of a `QueryResultBatch` message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Cursor {
      get { return cursor_; }
      set {
        cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (Version != other.Version) return false;
      if (Cursor != other.Cursor) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (Version != 0L) hash ^= Version.GetHashCode();
      if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (Cursor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Cursor);
      }
      if (Version != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Version);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (Version != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
      }
      if (Cursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cursor);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityResult other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::Google.Cloud.Datastore.V1.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.Version != 0L) {
        Version = other.Version;
      }
      if (other.Cursor.Length != 0) {
        Cursor = other.Cursor;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entity_ == null) {
              entity_ = new global::Google.Cloud.Datastore.V1.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
          case 26: {
            Cursor = input.ReadBytes();
            break;
          }
          case 32: {
            Version = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EntityResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies what data the 'entity' field contains.
      /// A `ResultType` is either implied (for example, in `LookupResponse.missing`
      /// from `datastore.proto`, it is always `KEY_ONLY`) or specified by context
      /// (for example, in message `QueryResultBatch`, field `entity_result_type`
      /// specifies a `ResultType` for all the values in field `entity_results`).
      /// </summary>
      public enum ResultType {
        /// <summary>
        /// Unspecified. This value is never used.
        /// </summary>
        [pbr::OriginalName("RESULT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The key and properties.
        /// </summary>
        [pbr::OriginalName("FULL")] Full = 1,
        /// <summary>
        /// A projected subset of properties. The entity may have no key.
        /// </summary>
        [pbr::OriginalName("PROJECTION")] Projection = 2,
        /// <summary>
        /// Only the key.
        /// </summary>
        [pbr::OriginalName("KEY_ONLY")] KeyOnly = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// A query for entities.
  /// </summary>
  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      projection_ = other.projection_.Clone();
      kind_ = other.kind_.Clone();
      Filter = other.filter_ != null ? other.Filter.Clone() : null;
      order_ = other.order_.Clone();
      distinctOn_ = other.distinctOn_.Clone();
      startCursor_ = other.startCursor_;
      endCursor_ = other.endCursor_;
      offset_ = other.offset_;
      Limit = other.Limit;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "projection" field.</summary>
    public const int ProjectionFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.Projection> _repeated_projection_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Datastore.V1.Projection.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.Projection> projection_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.Projection>();
    /// <summary>
    /// The projection to return. Defaults to returning all properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.Projection> Projection {
      get { return projection_; }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.KindExpression> _repeated_kind_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Datastore.V1.KindExpression.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.KindExpression> kind_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.KindExpression>();
    /// <summary>
    /// The kinds to query (if empty, returns entities of all kinds).
    /// Currently at most 1 kind may be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.KindExpression> Kind {
      get { return kind_; }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private global::Google.Cloud.Datastore.V1.Filter filter_;
    /// <summary>
    /// The filter to apply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.PropertyOrder> _repeated_order_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Datastore.V1.PropertyOrder.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.PropertyOrder> order_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.PropertyOrder>();
    /// <summary>
    /// The order to apply to the query results (if empty, order is unspecified).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.PropertyOrder> Order {
      get { return order_; }
    }

    /// <summary>Field number for the "distinct_on" field.</summary>
    public const int DistinctOnFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.PropertyReference> _repeated_distinctOn_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Datastore.V1.PropertyReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.PropertyReference> distinctOn_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.PropertyReference>();
    /// <summary>
    /// The properties to make distinct. The query results will contain the first
    /// result for each distinct combination of values for the given properties
    /// (if empty, all results are returned).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.PropertyReference> DistinctOn {
      get { return distinctOn_; }
    }

    /// <summary>Field number for the "start_cursor" field.</summary>
    public const int StartCursorFieldNumber = 7;
    private pb::ByteString startCursor_ = pb::ByteString.Empty;
    /// <summary>
    /// A starting point for the query results. Query cursors are
    /// returned in query result batches and
    /// [can only be used to continue the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StartCursor {
      get { return startCursor_; }
      set {
        startCursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_cursor" field.</summary>
    public const int EndCursorFieldNumber = 8;
    private pb::ByteString endCursor_ = pb::ByteString.Empty;
    /// <summary>
    /// An ending point for the query results. Query cursors are
    /// returned in query result batches and
    /// [can only be used to limit the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EndCursor {
      get { return endCursor_; }
      set {
        endCursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 10;
    private int offset_;
    /// <summary>
    /// The number of results to skip. Applies before limit, but after all other
    /// constraints. Optional. Must be >= 0 if specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 12;
    private static readonly pb::FieldCodec<int?> _single_limit_codec = pb::FieldCodec.ForStructWrapper<int>(98);
    private int? limit_;
    /// <summary>
    /// The maximum number of results to return. Applies after all other
    /// constraints. Optional.
    /// Unspecified is interpreted as no limit.
    /// Must be >= 0 if specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!projection_.Equals(other.projection_)) return false;
      if(!kind_.Equals(other.kind_)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if(!order_.Equals(other.order_)) return false;
      if(!distinctOn_.Equals(other.distinctOn_)) return false;
      if (StartCursor != other.StartCursor) return false;
      if (EndCursor != other.EndCursor) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= projection_.GetHashCode();
      hash ^= kind_.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      hash ^= order_.GetHashCode();
      hash ^= distinctOn_.GetHashCode();
      if (StartCursor.Length != 0) hash ^= StartCursor.GetHashCode();
      if (EndCursor.Length != 0) hash ^= EndCursor.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (limit_ != null) hash ^= Limit.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      projection_.WriteTo(output, _repeated_projection_codec);
      kind_.WriteTo(output, _repeated_kind_codec);
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      order_.WriteTo(output, _repeated_order_codec);
      distinctOn_.WriteTo(output, _repeated_distinctOn_codec);
      if (StartCursor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(StartCursor);
      }
      if (EndCursor.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(EndCursor);
      }
      if (Offset != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Offset);
      }
      if (limit_ != null) {
        _single_limit_codec.WriteTagAndValue(output, Limit);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += projection_.CalculateSize(_repeated_projection_codec);
      size += kind_.CalculateSize(_repeated_kind_codec);
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      size += order_.CalculateSize(_repeated_order_codec);
      size += distinctOn_.CalculateSize(_repeated_distinctOn_codec);
      if (StartCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartCursor);
      }
      if (EndCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndCursor);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (limit_ != null) {
        size += _single_limit_codec.CalculateSizeWithTag(Limit);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      projection_.Add(other.projection_);
      kind_.Add(other.kind_);
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Google.Cloud.Datastore.V1.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      order_.Add(other.order_);
      distinctOn_.Add(other.distinctOn_);
      if (other.StartCursor.Length != 0) {
        StartCursor = other.StartCursor;
      }
      if (other.EndCursor.Length != 0) {
        EndCursor = other.EndCursor;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.limit_ != null) {
        if (limit_ == null || other.Limit != 0) {
          Limit = other.Limit;
        }
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            projection_.AddEntriesFrom(input, _repeated_projection_codec);
            break;
          }
          case 26: {
            kind_.AddEntriesFrom(input, _repeated_kind_codec);
            break;
          }
          case 34: {
            if (filter_ == null) {
              filter_ = new global::Google.Cloud.Datastore.V1.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
          case 42: {
            order_.AddEntriesFrom(input, _repeated_order_codec);
            break;
          }
          case 50: {
            distinctOn_.AddEntriesFrom(input, _repeated_distinctOn_codec);
            break;
          }
          case 58: {
            StartCursor = input.ReadBytes();
            break;
          }
          case 66: {
            EndCursor = input.ReadBytes();
            break;
          }
          case 80: {
            Offset = input.ReadInt32();
            break;
          }
          case 98: {
            int? value = _single_limit_codec.Read(input);
            if (limit_ == null || value != 0) {
              Limit = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A representation of a kind.
  /// </summary>
  public sealed partial class KindExpression : pb::IMessage<KindExpression> {
    private static readonly pb::MessageParser<KindExpression> _parser = new pb::MessageParser<KindExpression>(() => new KindExpression());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KindExpression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindExpression(KindExpression other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindExpression Clone() {
      return new KindExpression(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the kind.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KindExpression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KindExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KindExpression other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A reference to a property relative to the kind expressions.
  /// </summary>
  public sealed partial class PropertyReference : pb::IMessage<PropertyReference> {
    private static readonly pb::MessageParser<PropertyReference> _parser = new pb::MessageParser<PropertyReference>(() => new PropertyReference());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyReference(PropertyReference other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyReference Clone() {
      return new PropertyReference(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The name of the property.
    /// If name includes "."s, it may be interpreted as a property name path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyReference other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A representation of a property in a projection.
  /// </summary>
  public sealed partial class Projection : pb::IMessage<Projection> {
    private static readonly pb::MessageParser<Projection> _parser = new pb::MessageParser<Projection>(() => new Projection());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Projection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Projection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Projection(Projection other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Projection Clone() {
      return new Projection(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::Google.Cloud.Datastore.V1.PropertyReference property_;
    /// <summary>
    /// The property to project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.PropertyReference Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Projection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Projection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Projection other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::Google.Cloud.Datastore.V1.PropertyReference();
        }
        Property.MergeFrom(other.Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::Google.Cloud.Datastore.V1.PropertyReference();
            }
            input.ReadMessage(property_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The desired order for a specific property.
  /// </summary>
  public sealed partial class PropertyOrder : pb::IMessage<PropertyOrder> {
    private static readonly pb::MessageParser<PropertyOrder> _parser = new pb::MessageParser<PropertyOrder>(() => new PropertyOrder());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyOrder(PropertyOrder other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      direction_ = other.direction_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyOrder Clone() {
      return new PropertyOrder(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::Google.Cloud.Datastore.V1.PropertyReference property_;
    /// <summary>
    /// The property to order by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.PropertyReference Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private global::Google.Cloud.Datastore.V1.PropertyOrder.Types.Direction direction_ = 0;
    /// <summary>
    /// The direction to order by. Defaults to `ASCENDING`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.PropertyOrder.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (Direction != other.Direction) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (Direction != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyOrder other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::Google.Cloud.Datastore.V1.PropertyReference();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::Google.Cloud.Datastore.V1.PropertyReference();
            }
            input.ReadMessage(property_);
            break;
          }
          case 16: {
            direction_ = (global::Google.Cloud.Datastore.V1.PropertyOrder.Types.Direction) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PropertyOrder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The sort direction.
      /// </summary>
      public enum Direction {
        /// <summary>
        /// Unspecified. This value must not be used.
        /// </summary>
        [pbr::OriginalName("DIRECTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Ascending.
        /// </summary>
        [pbr::OriginalName("ASCENDING")] Ascending = 1,
        /// <summary>
        /// Descending.
        /// </summary>
        [pbr::OriginalName("DESCENDING")] Descending = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// A holder for any type of filter.
  /// </summary>
  public sealed partial class Filter : pb::IMessage<Filter> {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter(Filter other) : this() {
      switch (other.FilterTypeCase) {
        case FilterTypeOneofCase.CompositeFilter:
          CompositeFilter = other.CompositeFilter.Clone();
          break;
        case FilterTypeOneofCase.PropertyFilter:
          PropertyFilter = other.PropertyFilter.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "composite_filter" field.</summary>
    public const int CompositeFilterFieldNumber = 1;
    /// <summary>
    /// A composite filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.CompositeFilter CompositeFilter {
      get { return filterTypeCase_ == FilterTypeOneofCase.CompositeFilter ? (global::Google.Cloud.Datastore.V1.CompositeFilter) filterType_ : null; }
      set {
        filterType_ = value;
        filterTypeCase_ = value == null ? FilterTypeOneofCase.None : FilterTypeOneofCase.CompositeFilter;
      }
    }

    /// <summary>Field number for the "property_filter" field.</summary>
    public const int PropertyFilterFieldNumber = 2;
    /// <summary>
    /// A filter on a property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.PropertyFilter PropertyFilter {
      get { return filterTypeCase_ == FilterTypeOneofCase.PropertyFilter ? (global::Google.Cloud.Datastore.V1.PropertyFilter) filterType_ : null; }
      set {
        filterType_ = value;
        filterTypeCase_ = value == null ? FilterTypeOneofCase.None : FilterTypeOneofCase.PropertyFilter;
      }
    }

    private object filterType_;
    /// <summary>Enum of possible cases for the "filter_type" oneof.</summary>
    public enum FilterTypeOneofCase {
      None = 0,
      CompositeFilter = 1,
      PropertyFilter = 2,
    }
    private FilterTypeOneofCase filterTypeCase_ = FilterTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterTypeOneofCase FilterTypeCase {
      get { return filterTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilterType() {
      filterTypeCase_ = FilterTypeOneofCase.None;
      filterType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompositeFilter, other.CompositeFilter)) return false;
      if (!object.Equals(PropertyFilter, other.PropertyFilter)) return false;
      if (FilterTypeCase != other.FilterTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) hash ^= CompositeFilter.GetHashCode();
      if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) hash ^= PropertyFilter.GetHashCode();
      hash ^= (int) filterTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) {
        output.WriteRawTag(10);
        output.WriteMessage(CompositeFilter);
      }
      if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) {
        output.WriteRawTag(18);
        output.WriteMessage(PropertyFilter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompositeFilter);
      }
      if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyFilter);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      switch (other.FilterTypeCase) {
        case FilterTypeOneofCase.CompositeFilter:
          CompositeFilter = other.CompositeFilter;
          break;
        case FilterTypeOneofCase.PropertyFilter:
          PropertyFilter = other.PropertyFilter;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Google.Cloud.Datastore.V1.CompositeFilter subBuilder = new global::Google.Cloud.Datastore.V1.CompositeFilter();
            if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) {
              subBuilder.MergeFrom(CompositeFilter);
            }
            input.ReadMessage(subBuilder);
            CompositeFilter = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Datastore.V1.PropertyFilter subBuilder = new global::Google.Cloud.Datastore.V1.PropertyFilter();
            if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) {
              subBuilder.MergeFrom(PropertyFilter);
            }
            input.ReadMessage(subBuilder);
            PropertyFilter = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A filter that merges multiple other filters using the given operator.
  /// </summary>
  public sealed partial class CompositeFilter : pb::IMessage<CompositeFilter> {
    private static readonly pb::MessageParser<CompositeFilter> _parser = new pb::MessageParser<CompositeFilter>(() => new CompositeFilter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompositeFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeFilter(CompositeFilter other) : this() {
      op_ = other.op_;
      filters_ = other.filters_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeFilter Clone() {
      return new CompositeFilter(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::Google.Cloud.Datastore.V1.CompositeFilter.Types.Operator op_ = 0;
    /// <summary>
    /// The operator for combining multiple filters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.CompositeFilter.Types.Operator Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.Filter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Datastore.V1.Filter.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.Filter> filters_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.Filter>();
    /// <summary>
    /// The list of filters to combine.
    /// Must contain at least one filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.Filter> Filters {
      get { return filters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompositeFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompositeFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if(!filters_.Equals(other.filters_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != 0) hash ^= Op.GetHashCode();
      hash ^= filters_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      filters_.WriteTo(output, _repeated_filters_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Op != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      size += filters_.CalculateSize(_repeated_filters_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompositeFilter other) {
      if (other == null) {
        return;
      }
      if (other.Op != 0) {
        Op = other.Op;
      }
      filters_.Add(other.filters_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            op_ = (global::Google.Cloud.Datastore.V1.CompositeFilter.Types.Operator) input.ReadEnum();
            break;
          }
          case 18: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CompositeFilter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A composite filter operator.
      /// </summary>
      public enum Operator {
        /// <summary>
        /// Unspecified. This value must not be used.
        /// </summary>
        [pbr::OriginalName("OPERATOR_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The results are required to satisfy each of the combined filters.
        /// </summary>
        [pbr::OriginalName("AND")] And = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// A filter on a specific property.
  /// </summary>
  public sealed partial class PropertyFilter : pb::IMessage<PropertyFilter> {
    private static readonly pb::MessageParser<PropertyFilter> _parser = new pb::MessageParser<PropertyFilter>(() => new PropertyFilter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyFilter(PropertyFilter other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      op_ = other.op_;
      Value = other.value_ != null ? other.Value.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyFilter Clone() {
      return new PropertyFilter(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::Google.Cloud.Datastore.V1.PropertyReference property_;
    /// <summary>
    /// The property to filter by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.PropertyReference Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 2;
    private global::Google.Cloud.Datastore.V1.PropertyFilter.Types.Operator op_ = 0;
    /// <summary>
    /// The operator to filter by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.PropertyFilter.Types.Operator Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::Google.Cloud.Datastore.V1.Value value_;
    /// <summary>
    /// The value to compare the property to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (Op != other.Op) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (Op != 0) hash ^= Op.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (Op != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Op);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (Op != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyFilter other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::Google.Cloud.Datastore.V1.PropertyReference();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.Op != 0) {
        Op = other.Op;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Google.Cloud.Datastore.V1.Value();
        }
        Value.MergeFrom(other.Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::Google.Cloud.Datastore.V1.PropertyReference();
            }
            input.ReadMessage(property_);
            break;
          }
          case 16: {
            op_ = (global::Google.Cloud.Datastore.V1.PropertyFilter.Types.Operator) input.ReadEnum();
            break;
          }
          case 26: {
            if (value_ == null) {
              value_ = new global::Google.Cloud.Datastore.V1.Value();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PropertyFilter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A property filter operator.
      /// </summary>
      public enum Operator {
        /// <summary>
        /// Unspecified. This value must not be used.
        /// </summary>
        [pbr::OriginalName("OPERATOR_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Less than.
        /// </summary>
        [pbr::OriginalName("LESS_THAN")] LessThan = 1,
        /// <summary>
        /// Less than or equal.
        /// </summary>
        [pbr::OriginalName("LESS_THAN_OR_EQUAL")] LessThanOrEqual = 2,
        /// <summary>
        /// Greater than.
        /// </summary>
        [pbr::OriginalName("GREATER_THAN")] GreaterThan = 3,
        /// <summary>
        /// Greater than or equal.
        /// </summary>
        [pbr::OriginalName("GREATER_THAN_OR_EQUAL")] GreaterThanOrEqual = 4,
        /// <summary>
        /// Equal.
        /// </summary>
        [pbr::OriginalName("EQUAL")] Equal = 5,
        /// <summary>
        /// Has ancestor.
        /// </summary>
        [pbr::OriginalName("HAS_ANCESTOR")] HasAncestor = 11,
      }

    }
    #endregion

  }

  /// <summary>
  /// A [GQL query](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).
  /// </summary>
  public sealed partial class GqlQuery : pb::IMessage<GqlQuery> {
    private static readonly pb::MessageParser<GqlQuery> _parser = new pb::MessageParser<GqlQuery>(() => new GqlQuery());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GqlQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GqlQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GqlQuery(GqlQuery other) : this() {
      queryString_ = other.queryString_;
      allowLiterals_ = other.allowLiterals_;
      namedBindings_ = other.namedBindings_.Clone();
      positionalBindings_ = other.positionalBindings_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GqlQuery Clone() {
      return new GqlQuery(this);
    }

    /// <summary>Field number for the "query_string" field.</summary>
    public const int QueryStringFieldNumber = 1;
    private string queryString_ = "";
    /// <summary>
    /// A string of the format described
    /// [here](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueryString {
      get { return queryString_; }
      set {
        queryString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_literals" field.</summary>
    public const int AllowLiteralsFieldNumber = 2;
    private bool allowLiterals_;
    /// <summary>
    /// When false, the query string must not contain any literals and instead must
    /// bind all values. For example,
    /// `SELECT * FROM Kind WHERE a = 'string literal'` is not allowed, while
    /// `SELECT * FROM Kind WHERE a = @value` is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowLiterals {
      get { return allowLiterals_; }
      set {
        allowLiterals_ = value;
      }
    }

    /// <summary>Field number for the "named_bindings" field.</summary>
    public const int NamedBindingsFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Google.Cloud.Datastore.V1.GqlQueryParameter>.Codec _map_namedBindings_codec
        = new pbc::MapField<string, global::Google.Cloud.Datastore.V1.GqlQueryParameter>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Datastore.V1.GqlQueryParameter.Parser), 42);
    private readonly pbc::MapField<string, global::Google.Cloud.Datastore.V1.GqlQueryParameter> namedBindings_ = new pbc::MapField<string, global::Google.Cloud.Datastore.V1.GqlQueryParameter>();
    /// <summary>
    /// For each non-reserved named binding site in the query string, there must be
    /// a named parameter with that name, but not necessarily the inverse.
    ///
    /// Key must match regex `[A-Za-z_$][A-Za-z_$0-9]*`, must not match regex
    /// `__.*__`, and must not be `""`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Datastore.V1.GqlQueryParameter> NamedBindings {
      get { return namedBindings_; }
    }

    /// <summary>Field number for the "positional_bindings" field.</summary>
    public const int PositionalBindingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.GqlQueryParameter> _repeated_positionalBindings_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Datastore.V1.GqlQueryParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.GqlQueryParameter> positionalBindings_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.GqlQueryParameter>();
    /// <summary>
    /// Numbered binding site @1 references the first numbered parameter,
    /// effectively using 1-based indexing, rather than the usual 0.
    ///
    /// For each binding site numbered i in `query_string`, there must be an i-th
    /// numbered parameter. The inverse must also be true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.GqlQueryParameter> PositionalBindings {
      get { return positionalBindings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GqlQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GqlQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueryString != other.QueryString) return false;
      if (AllowLiterals != other.AllowLiterals) return false;
      if (!NamedBindings.Equals(other.NamedBindings)) return false;
      if(!positionalBindings_.Equals(other.positionalBindings_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueryString.Length != 0) hash ^= QueryString.GetHashCode();
      if (AllowLiterals != false) hash ^= AllowLiterals.GetHashCode();
      hash ^= NamedBindings.GetHashCode();
      hash ^= positionalBindings_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueryString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueryString);
      }
      if (AllowLiterals != false) {
        output.WriteRawTag(16);
        output.WriteBool(AllowLiterals);
      }
      positionalBindings_.WriteTo(output, _repeated_positionalBindings_codec);
      namedBindings_.WriteTo(output, _map_namedBindings_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueryString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueryString);
      }
      if (AllowLiterals != false) {
        size += 1 + 1;
      }
      size += namedBindings_.CalculateSize(_map_namedBindings_codec);
      size += positionalBindings_.CalculateSize(_repeated_positionalBindings_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GqlQuery other) {
      if (other == null) {
        return;
      }
      if (other.QueryString.Length != 0) {
        QueryString = other.QueryString;
      }
      if (other.AllowLiterals != false) {
        AllowLiterals = other.AllowLiterals;
      }
      namedBindings_.Add(other.namedBindings_);
      positionalBindings_.Add(other.positionalBindings_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            QueryString = input.ReadString();
            break;
          }
          case 16: {
            AllowLiterals = input.ReadBool();
            break;
          }
          case 34: {
            positionalBindings_.AddEntriesFrom(input, _repeated_positionalBindings_codec);
            break;
          }
          case 42: {
            namedBindings_.AddEntriesFrom(input, _map_namedBindings_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A binding parameter for a GQL query.
  /// </summary>
  public sealed partial class GqlQueryParameter : pb::IMessage<GqlQueryParameter> {
    private static readonly pb::MessageParser<GqlQueryParameter> _parser = new pb::MessageParser<GqlQueryParameter>(() => new GqlQueryParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GqlQueryParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GqlQueryParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GqlQueryParameter(GqlQueryParameter other) : this() {
      switch (other.ParameterTypeCase) {
        case ParameterTypeOneofCase.Value:
          Value = other.Value.Clone();
          break;
        case ParameterTypeOneofCase.Cursor:
          Cursor = other.Cursor;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GqlQueryParameter Clone() {
      return new GqlQueryParameter(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    /// <summary>
    /// A value parameter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.Value Value {
      get { return parameterTypeCase_ == ParameterTypeOneofCase.Value ? (global::Google.Cloud.Datastore.V1.Value) parameterType_ : null; }
      set {
        parameterType_ = value;
        parameterTypeCase_ = value == null ? ParameterTypeOneofCase.None : ParameterTypeOneofCase.Value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 3;
    /// <summary>
    /// A query cursor. Query cursors are returned in query
    /// result batches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Cursor {
      get { return parameterTypeCase_ == ParameterTypeOneofCase.Cursor ? (pb::ByteString) parameterType_ : pb::ByteString.Empty; }
      set {
        parameterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        parameterTypeCase_ = ParameterTypeOneofCase.Cursor;
      }
    }

    private object parameterType_;
    /// <summary>Enum of possible cases for the "parameter_type" oneof.</summary>
    public enum ParameterTypeOneofCase {
      None = 0,
      Value = 2,
      Cursor = 3,
    }
    private ParameterTypeOneofCase parameterTypeCase_ = ParameterTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterTypeOneofCase ParameterTypeCase {
      get { return parameterTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParameterType() {
      parameterTypeCase_ = ParameterTypeOneofCase.None;
      parameterType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GqlQueryParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GqlQueryParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (Cursor != other.Cursor) return false;
      if (ParameterTypeCase != other.ParameterTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parameterTypeCase_ == ParameterTypeOneofCase.Value) hash ^= Value.GetHashCode();
      if (parameterTypeCase_ == ParameterTypeOneofCase.Cursor) hash ^= Cursor.GetHashCode();
      hash ^= (int) parameterTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (parameterTypeCase_ == ParameterTypeOneofCase.Value) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (parameterTypeCase_ == ParameterTypeOneofCase.Cursor) {
        output.WriteRawTag(26);
        output.WriteBytes(Cursor);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parameterTypeCase_ == ParameterTypeOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (parameterTypeCase_ == ParameterTypeOneofCase.Cursor) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cursor);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GqlQueryParameter other) {
      if (other == null) {
        return;
      }
      switch (other.ParameterTypeCase) {
        case ParameterTypeOneofCase.Value:
          Value = other.Value;
          break;
        case ParameterTypeOneofCase.Cursor:
          Cursor = other.Cursor;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            global::Google.Cloud.Datastore.V1.Value subBuilder = new global::Google.Cloud.Datastore.V1.Value();
            if (parameterTypeCase_ == ParameterTypeOneofCase.Value) {
              subBuilder.MergeFrom(Value);
            }
            input.ReadMessage(subBuilder);
            Value = subBuilder;
            break;
          }
          case 26: {
            Cursor = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A batch of results produced by a query.
  /// </summary>
  public sealed partial class QueryResultBatch : pb::IMessage<QueryResultBatch> {
    private static readonly pb::MessageParser<QueryResultBatch> _parser = new pb::MessageParser<QueryResultBatch>(() => new QueryResultBatch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResultBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Datastore.V1.QueryReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResultBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResultBatch(QueryResultBatch other) : this() {
      skippedResults_ = other.skippedResults_;
      skippedCursor_ = other.skippedCursor_;
      entityResultType_ = other.entityResultType_;
      entityResults_ = other.entityResults_.Clone();
      endCursor_ = other.endCursor_;
      moreResults_ = other.moreResults_;
      snapshotVersion_ = other.snapshotVersion_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResultBatch Clone() {
      return new QueryResultBatch(this);
    }

    /// <summary>Field number for the "skipped_results" field.</summary>
    public const int SkippedResultsFieldNumber = 6;
    private int skippedResults_;
    /// <summary>
    /// The number of results skipped, typically because of an offset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkippedResults {
      get { return skippedResults_; }
      set {
        skippedResults_ = value;
      }
    }

    /// <summary>Field number for the "skipped_cursor" field.</summary>
    public const int SkippedCursorFieldNumber = 3;
    private pb::ByteString skippedCursor_ = pb::ByteString.Empty;
    /// <summary>
    /// A cursor that points to the position after the last skipped result.
    /// Will be set when `skipped_results` != 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SkippedCursor {
      get { return skippedCursor_; }
      set {
        skippedCursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_result_type" field.</summary>
    public const int EntityResultTypeFieldNumber = 1;
    private global::Google.Cloud.Datastore.V1.EntityResult.Types.ResultType entityResultType_ = 0;
    /// <summary>
    /// The result type for every entity in `entity_results`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.EntityResult.Types.ResultType EntityResultType {
      get { return entityResultType_; }
      set {
        entityResultType_ = value;
      }
    }

    /// <summary>Field number for the "entity_results" field.</summary>
    public const int EntityResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Datastore.V1.EntityResult> _repeated_entityResults_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Datastore.V1.EntityResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Datastore.V1.EntityResult> entityResults_ = new pbc::RepeatedField<global::Google.Cloud.Datastore.V1.EntityResult>();
    /// <summary>
    /// The results for this batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Datastore.V1.EntityResult> EntityResults {
      get { return entityResults_; }
    }

    /// <summary>Field number for the "end_cursor" field.</summary>
    public const int EndCursorFieldNumber = 4;
    private pb::ByteString endCursor_ = pb::ByteString.Empty;
    /// <summary>
    /// A cursor that points to the position after the last result in the batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EndCursor {
      get { return endCursor_; }
      set {
        endCursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "more_results" field.</summary>
    public const int MoreResultsFieldNumber = 5;
    private global::Google.Cloud.Datastore.V1.QueryResultBatch.Types.MoreResultsType moreResults_ = 0;
    /// <summary>
    /// The state of the query after the current batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Datastore.V1.QueryResultBatch.Types.MoreResultsType MoreResults {
      get { return moreResults_; }
      set {
        moreResults_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_version" field.</summary>
    public const int SnapshotVersionFieldNumber = 7;
    private long snapshotVersion_;
    /// <summary>
    /// The version number of the snapshot this batch was returned from.
    /// This applies to the range of results from the query's `start_cursor` (or
    /// the beginning of the query if no cursor was given) to this batch's
    /// `end_cursor` (not the query's `end_cursor`).
    ///
    /// In a single transaction, subsequent query result batches for the same query
    /// can have a greater snapshot version number. Each batch's snapshot version
    /// is valid for all preceding batches.
    /// The value will be zero for eventually consistent queries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotVersion {
      get { return snapshotVersion_; }
      set {
        snapshotVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResultBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResultBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkippedResults != other.SkippedResults) return false;
      if (SkippedCursor != other.SkippedCursor) return false;
      if (EntityResultType != other.EntityResultType) return false;
      if(!entityResults_.Equals(other.entityResults_)) return false;
      if (EndCursor != other.EndCursor) return false;
      if (MoreResults != other.MoreResults) return false;
      if (SnapshotVersion != other.SnapshotVersion) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkippedResults != 0) hash ^= SkippedResults.GetHashCode();
      if (SkippedCursor.Length != 0) hash ^= SkippedCursor.GetHashCode();
      if (EntityResultType != 0) hash ^= EntityResultType.GetHashCode();
      hash ^= entityResults_.GetHashCode();
      if (EndCursor.Length != 0) hash ^= EndCursor.GetHashCode();
      if (MoreResults != 0) hash ^= MoreResults.GetHashCode();
      if (SnapshotVersion != 0L) hash ^= SnapshotVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityResultType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EntityResultType);
      }
      entityResults_.WriteTo(output, _repeated_entityResults_codec);
      if (SkippedCursor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SkippedCursor);
      }
      if (EndCursor.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(EndCursor);
      }
      if (MoreResults != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) MoreResults);
      }
      if (SkippedResults != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SkippedResults);
      }
      if (SnapshotVersion != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(SnapshotVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkippedResults != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkippedResults);
      }
      if (SkippedCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SkippedCursor);
      }
      if (EntityResultType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityResultType);
      }
      size += entityResults_.CalculateSize(_repeated_entityResults_codec);
      if (EndCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndCursor);
      }
      if (MoreResults != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoreResults);
      }
      if (SnapshotVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SnapshotVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResultBatch other) {
      if (other == null) {
        return;
      }
      if (other.SkippedResults != 0) {
        SkippedResults = other.SkippedResults;
      }
      if (other.SkippedCursor.Length != 0) {
        SkippedCursor = other.SkippedCursor;
      }
      if (other.EntityResultType != 0) {
        EntityResultType = other.EntityResultType;
      }
      entityResults_.Add(other.entityResults_);
      if (other.EndCursor.Length != 0) {
        EndCursor = other.EndCursor;
      }
      if (other.MoreResults != 0) {
        MoreResults = other.MoreResults;
      }
      if (other.SnapshotVersion != 0L) {
        SnapshotVersion = other.SnapshotVersion;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            entityResultType_ = (global::Google.Cloud.Datastore.V1.EntityResult.Types.ResultType) input.ReadEnum();
            break;
          }
          case 18: {
            entityResults_.AddEntriesFrom(input, _repeated_entityResults_codec);
            break;
          }
          case 26: {
            SkippedCursor = input.ReadBytes();
            break;
          }
          case 34: {
            EndCursor = input.ReadBytes();
            break;
          }
          case 40: {
            moreResults_ = (global::Google.Cloud.Datastore.V1.QueryResultBatch.Types.MoreResultsType) input.ReadEnum();
            break;
          }
          case 48: {
            SkippedResults = input.ReadInt32();
            break;
          }
          case 56: {
            SnapshotVersion = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryResultBatch message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The possible values for the `more_results` field.
      /// </summary>
      public enum MoreResultsType {
        /// <summary>
        /// Unspecified. This value is never used.
        /// </summary>
        [pbr::OriginalName("MORE_RESULTS_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// There may be additional batches to fetch from this query.
        /// </summary>
        [pbr::OriginalName("NOT_FINISHED")] NotFinished = 1,
        /// <summary>
        /// The query is finished, but there may be more results after the limit.
        /// </summary>
        [pbr::OriginalName("MORE_RESULTS_AFTER_LIMIT")] MoreResultsAfterLimit = 2,
        /// <summary>
        /// The query is finished, but there may be more results after the end
        /// cursor.
        /// </summary>
        [pbr::OriginalName("MORE_RESULTS_AFTER_CURSOR")] MoreResultsAfterCursor = 4,
        /// <summary>
        /// The query is finished, and there are no more results.
        /// </summary>
        [pbr::OriginalName("NO_MORE_RESULTS")] NoMoreResults = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
